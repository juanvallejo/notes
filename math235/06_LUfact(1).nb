(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    174566,       4619]
NotebookOptionsPosition[    165063,       4307]
NotebookOutlinePosition[    165671,       4329]
CellTagsIndexPosition[    165628,       4326]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Computer Assignment: \nLU Factorization",
 FontFamily->"Arial"]], "Title",
 CellChangeTimes->{
  3.5001332152420177`*^9, {3.5007415091840687`*^9, 3.5007415128278637`*^9}, {
   3.5007416075437846`*^9, 3.500741618557773*^9}, {3.5011917782213087`*^9, 
   3.5011918034825974`*^9}, {3.501192135951408*^9, 3.501192156464364*^9}, {
   3.5011978314440546`*^9, 3.5011978428376884`*^9}, {3.501203635317049*^9, 
   3.5012036578608503`*^9}, 3.5044751169357824`*^9, {3.504748023355047*^9, 
   3.504748034174666*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
auo0NZLr6jgb0aeiU43K9VHbZU2qV1D0RfmVW6yPH0L/Vi6MbOXOCp9O5I6c
wcejFzA9LRH/Wq4kBbnOStiUznfCmXLQ4pXN4odLp84nP7AbVzR67mmDKNWG
UCF5830rfx638uG6s467/VKpOZGjtrFZcPapDthyp60Z2jLu02Tt8/0H2gEV
+V+nXMO6hga6OrmGt7IvsXjwGHrLcU7vncKb87dsgvhHdAb/LuPPFBTYxtVb
yo0GOWISjNVXVqv7hjERynufv+X8wtXM0AYyvKkji5107A/tS57w2rttWfDo
gbzpL6gXz2wZZf/P4qxxrrRFQwvAq7dUbd3Dk76Duekfyq0/BfLYN5hS8ZgV
zoFUtQ2gVDRavuTOwk69qV63DZ4+kwtQg20WTcPvfDp9y2ay9c39A3ymfLyu
nhqpB4q3rBNtdjMnl9nJw4jU6OivC+XIog3UPC23FER5vcX/f+ft98CZOudC
rl+lyfxpzLOtUgvJGYW/lDYdpVyNdeI7JckaP1bx7tRFdkUNYGxzNxa19WGr
cFqmPozc5FReb91C7Z3r8vl3NDi3hnlPf98IBdu7Fd9mtkZD2Vs34+NXPJk4
j8KAcB7quvJM341n/mE862CgzDGAGucgKl2CudXKl3xv4bjJC6GgyNLf3vAr
n/9mw6bWO+tv/j04a/xexWK++cjVg6eYmTCEYHsPwhw8SR8ygdILhZhLqiwY
U/pZ/nXU/5vbj8aZbX5AhVzDSim3epP563Hbti4kpd9EvIFRaa9Q8ufTl1ya
uZhpbr5Ma+XGWnc/tmj17DWEkBsXz6vF86i7mA3vnltzqNKO1mgsiLV1yizP
G5W2k8Z9MdbNBnvb/D219cHUaKyS6J064YrSIxe4FpVGviaUF7pISgy9KdZ1
455GvKazgb+4d6K8fRj3FE5zMfAydgS1R89ZzsPWJ2IbqlJv/hxO1sYwG3/W
/0aYGo7Y+mH1e83qnKuaZ2XcyjrGwpj+dLFzQdesDcM7R5C/6xC8FB37Svis
rMoiYH5A5/CPxplFjyhjsZUwfZoGZytc0+fvVfuS6qzju8RT3tmVxYKOoQxt
IX6grSN7/PQc8dVxQuvL9eBOlKYOwbgrE548+tRer7T7mmyOrla+qkpsQzk1
VVWqlrEVlUpbNC5LszqWRG2Trbf01VD6gRcHTnJp0BQu62O4r4ngpW8fnuqi
uKvrxS3fLtz17MRjj2Aeuwdz3ymQmw56CvURvFuxQ8pXjqdcvquiVqVdY5Xg
tlLpzzbTuKv7y6G2tqO3eFOz6s/rbe25trGiyvG9r5K6VkjB3LWs6xbLIEcv
OjVpTqyXHzvnLOD9/YdqnwllgrMPlRaf8L+xHx2s+sRkbSf69jl+luls8zKN
tTy+cIZVcTEktmjOqObN2Ovrx0V/PZfcNRQ6t+eFYK48sT9VGzdgvJYndbdY
CuajOjZHTLxivAQylWpfVV1NtaqXFZ1cX23RzQ1DwoTDqmrF69ZWfcp1FdVU
n7/O7bFzOWuI5qZXb15qYinx7EuxYK1IeO2mrgc3fcK42aEjha6B3HML4pbk
0esdQnk9aglceQIv5Dvf1ap5y1Sp6FGjirN6Y6N2fT61dzSeJ2oZy2mpo/WN
K6dSD1+/p+rUJW6NmsMGydWjfmlHQpNW9Glux8K+/Si+eF7Os8rSN1tt6ztp
rC++3/bjcdZY9f72jEzzN18x8u5eIXsnjWWgkz39m/zMRldXcv39eeDjL2Xu
S4mHj+gkA48joiidPJnaPbswFRVI3X0jhVRh9aLW9lKlTbimVmBYLrRX3QBs
pfyq62qoqPyLcF6lpe+51kht/n1ezE3nVq9UwVQsTzUxvHOLpaxDHC+0MTzw
i+S2Xzi3tGEUKjhzC+SOeM8iJ4M8DqMkeiymrZLX75YJ78h3fqyz9I3Yhn5b
h9rZ5EON1K0qeaHaZObz1t3GIfm/8gPVd27zZvd+8gaPZ5NnR2Y0cST1D83l
GrVmnMaf4/MXUfu2xHpxaz9pCfOPGRX6Pw1ndYKXoswMJuv9if3pJ+a1bMER
jw7cEZy98hasuWq56+hJvmi46/qO3ItP4t2SZRjzcqVc31rxVaP6PoWnlL73
eqnXprq6Rr+tjIGrt/CdgjHJbdx/xcflO8jv3J8CH9Fj/2c/PnjEUekk4RbP
e+G0Em1vnnr34KFotrvuHQVjwmcugjXxBLfcQ7hn6Mvb8Suoy5Xc9dHUoMHN
ahuPkSrhFQtvWcafVSnt1u8/UlVRJVXCqqPqrGPbbcxXXsbL82c4MWMm6V17
Ms9Ry6ymzsxs4sDQP7YgtZk9GZHxvDhxSkBcpZ6dyWRr97Hp1v8/4Ozb/ZCN
caaucqBq8VpVK33Mv8qqmD7ENWnC6J9/Zl3L1lxw96RYqxNO8+exsw+322m5
7uDDda2Bu91FP02ezpusPZRfu4rxxTNLn7vJ2oCnzicxWfZf6kVlvYw7L6lc
f4AHkSO57NGdB649qfROoEbwVecYR51LPNUefSnXRPFW05MX7p0pdgnivnOg
hPy+S0duii+4INjL7zqAis1H4XmFJSmq0yOEs8zKmCijmhMtMzdFy0tuq3z3
npq3Hy39HrVWASk6rP7DO17fvE5+5la2DU1jsmiHgZIfh/7cgtlNHVnRxoux
TewY007DhTmLqX/2XB2TaTIpYxeqVY1qrLeovB8xMOj3w1lj5/T1eTa2BfVS
z9X2DUVTyFb16gU7xo5hQKvWDPzjT8z6+Rf2t3WmyEvHa98g3nkbKPXQU+Ie
wBPPIG7Kc+cDQjjbsw8Fo8fzJnM3dYV3Mb1VtHCVJSpqLDlMFd7yy+U16nos
3HpOxfrD3I2fyDV/yY2efXgvmqzaQzDm0o965wRMbgnUC7fVaKLFY0bwxr0L
TwVbD5wtfHZX/EBBhxBOOQSQo+3Gy+HzMecUyu/axglbRpvVWWdtmm2jNyR3
K31H6vG9V9ohqtWoLX7Oo4OHyBo7mumhIaQKn6fZOTC6RTumN3NgSQs3VrfV
Mr2FMwt0wdzbe0jVYkbxPvWCr1rh9ErxR9X11T9sDPKPx9m3nPq3cfbZuH/B
Wa3SRy7eqvp9GccXL2Z0ew1JP/3MmD/+TEYrBy5rdLzwD+Evvp2o8Ayk3MPA
2w4GHmj06ms5Wj2nAztzITqZgvGzebp2B1WHL4o2lzymtFu+l18tk3gumqzw
JfVnini3aj+3+03loj6eIv94yg1DqdImU+4QRY2CsQ4DoH1/0CRh1MRR3T6K
927hPHcN4ZFg7a5bR4o8QinQdOFS+zAueodT2H0wH5fthNsvLWMFjA0jx1BJ
TvHIildW6lVFlcWbfpTnHzzn48GTXJg+lw1/7sMUX19S2zkwpFUbJrRxYL69
B6vsNaxo6cq8Zo7Md/BkX+IQ3l3NV6+pua5aaLtGHUFeKZymcOj3GdXy9fb7
4+zbjTdfoVFyXI0yFt+ktF995HpmJnODQ8RPNWXgH35iaTM7jrv4cse3I699
giWHGahw0fHBTUeJJoDHWtFI8lquT0dOaoM56d+NS12SeNx/BmXTN1O++QyV
Bwoo33OdDxnneL90P0/GruZS5FhO6xO45N+PkuDh1HeeRK1uKOXCYdWaQdRr
h2LSpoF2MHilUCtY++gRKbmzG4/cw7jrEcYtza/iTcPFI0RR4B/NeZ3watx4
yjOOYnr02mIAbGes+BTlPCskVyprp91+SO3lQt4fO8urJWu52DeZlT46Jto7
MrZtOya3c2R2O2cWtnVhmZ0rGxy8WNXKhUk/tWCNdwD3lqym5vETbHpOmXUl
aFNH91Yqedr8Y1ZW+HfF2bfmytVbx/qYpZ6/vHiRTUn96desBX3ksCf93Jwt
bdy50F7HI8mbbwVb5e56Ktx1lLUPoMQ7iKfaUPGlnbnl040bPj3I940k3z+W
/IAB3O4+nnvRs8mPnMaVnpO5HD6e7KBBHPWN46xvAneDhvE+bAJVIROo6yhh
GE+VfixVujGCuzEY/Udi8k2jRtufD16xPNNECo/24I4mXPJ5T/Ggkdz1i6XA
N4bTnj057N+bS8lT+ZCVA8WCtVLxoGUSb0vhlfjC2/cwnzpHzYbtPB47lewe
0Wz3DSDdRcNSBzcW2DsJfzmyWDC2op0Ly1s7srS5PevberCmjRtTf2nN7pBe
VB48Bu/eNoxHUhhM0YH/JVFuUnitXp398723f1d9ZntH4znmpkbfUSNlkT13
ISltneguhz3oD01Y2LQt+x203BCMvRL+KtcGUilRLhh76xlMiWcorzy7ymu9
JPrwwjuW4vZ9uesayyOv/hT7pVGgHcQ131SuG0ZxOWA41wwjuB82iZfdZ/K8
0wQe64bxIWQKtb0W8rHzLN4GT6E8eCpVQZOpNoylQriu1C+FJz5x3JPfuK2N
osgnmiLfvtz2jeeGV1/Ot48ky6kLu4Xfrg2aTfHyTO6l7+Dehh0USzxauUny
+ixyY/pzvnMvjvno2Sp8tbx5G5a1sCPd3pmNTm6sd3Bhjeiy1a3sWdfagc12
bmx10AjOXFnU1p0zKalw6ao6Js8kuqzemiurrOOX/0s0SJXJ9CO60f9H4My2
xqiF04yqP1ManO7sO8gYXz29RJ8lCM7GS67YIBr4nOTKx37BfNCFUC77v/h0
4p1XCKUdQnnr1pX3Hr0kr8ZS5d1fIlWwOIxKv/FU6qfxVj+VV4YZvAqbx6se
iymNWsHb6FW8iFjI3U6TKBIsveg+hw8xK3jRaxHF3ecKBudR2nUO78Km8SZo
HM8DhvLAXzjSL5FC336i6xLl72ThtCSpA/24JLn1pHsUBzS9OSI5+UjYAPZ1
TmZ/l0SOdI7nsCGCTPEx69t4sLmNC5mSD3cIzrbaObGlrSNbhcu2OzjL3pEN
rexY37w1mW2cOeCmZYfgbK1gbLuuI7fnLQal/b+mSsVZjeizKlNdQ7uvre33
R2i0379d49vqwNbv0pjPlMfl5eV8VHKLeLTi87nM6xJBgmizhJ+aM/SPzZjf
pC0H2mmFQ4J4LTgrlf070WPvvMP44NlN8BVBZfs+VGos+qrGewS1PuOp0c2g
JnCB5MWlfAhdyuuwpZT2WsO7mPWU9FnLw56LeNBjAc/7rOB1fDrP49ZyTzBY
1HsZ96OW8yRyKc/C5/Ok83QedBzHbcMwbuoGix4bRKFuiGAtTfRhKvleA8ST
pHDFdwiXdWmiFRPYJ3jb6x3BXtFwe9xCyXI0sL+dP4cd/TjqrOWQk4a9kit3
2buwU/LkznZOgjsHwZY921u3ZWerduxr68YBR08y7FzY6OLFmah+vN2zX7xN
maWNTGnPMNepbXP/D5/3L/xPxJnabyNcU1un9CPWqWNjv37H39ZOa+Mzmz5T
WntK3rzm1rWrFFy4SE7GdlbH9WeYszfxP7dgoOBswh+F08Rr5bn7q9r/uaeB
N16deK/tToVPb/GKccJfiVRKeVd4p8lzkuv8p/JfhnlUhK6gvHs678LX8TJ8
La8iN/EqJoNnMRt5GLWWJ30Fc8nbeZWyjYf9NlPUbxOFiZu5nbyJ+wnredB3
Dfcjl3D711kUBk/khmE0BfrR3BIdV6QfJzFeNOEoLnqmctl3hLw2jkuCvRzB
/OkO0Zxw6cGxdmESQeQ4B3FRE8QFTz3ZHXw46OwhOBN8CYftFi7b4+DEXsHa
Xsmbh+xdOdyuvTx2J71lO7Z6+3N71ARqL+ZZxrFb20ks63Z8WofSNhLuf6oP
qBV8KW3Z1TXV6jzVb2fFb+DM/PmfDUOFsPbBiJ54+6GM/Lw8ti5dxsKBaczq
3ps0Nx8Sf7FjaBM7xv7UksU/t+JIm/YUKvlTE0iptqvkzygq/QVj/imU+w+W
GMFH/UTKAmdQGjyf152XS54UnorYyNOoDJ7GbONp3E6eJuziSaIlniZZ9sWJ
O7mXvJOigVkUpu7lVtoebqfK4wFbuRW3jsJeS7kROof8oGmCtancDJhGoWE6
RUFzuBE4k3O+4zjtNYJc7Siu+44mX/zqFfcEch0iuejQgwtOXTnr3InTznpO
iYc+5ubFAWd3Mu0d2Gbfjt1OLoI7d444ugm+XDju4MExyZd7RJ+tbmlPps7A
83kLobBQcPbeOoagFsuqatYmQqUvy/xjMKZs3wNnyjpSyvxnozrux2gZx/XZ
O/7aAI1Pf9o0WmV9HRW1NVSbLDz57vUrDm/OYGzP3sS4ehLbypHhbTVMbevF
9KaOLPhZ9EpTBy621fJIE0yZrjflAf34qEviveim9/rhfAyeTHnXhbyPWMXr
3usEW5t4GLOFe7HbuddvF/eT9vAwZT+PBhzg0cADFA88KPuDPOy/n3v99wmm
9lEw5CD5Qw+RP0zZ7xVNv5NrwnPXIldzLWwRVwVX1wyzuKafLfu5FIQtI7/z
Cs4ZZnPKdwLntOO4oh1Lvudwrrsmc82hL1ecxYe69eKMSxhHHfWiAbzZ59ie
PU6iuRwc2Saxy8lV5bejjh4cb+dBtmDspKPkVvGaq9sI3wWJXlibLj5WtFl1
eUOfrm2Gu63+2rpAfsT2r8SZMl5MmTtY32g8oAU6ZvUP5XUlj5p+a7yG+euH
6rhIwVml0k7bkINNPJO6umb4KHq1daZ7kxak2bkzzd6bBW08WdbMmU2/OHC8
lYYiTSfRadGUGZIo1ffnTUAq78Q3louuL49fz9uUrTzrn8ndlJ3c7L+bG4ME
P4MPUjjkCLfTjnF36HHuWePu0GPcST1KUeoRwdhhrst7rqYe5kraIS6nHiBv
QBZ5cVu51DOdy6LvLoneuxQwj1z9PC4YFpIbtoqLkpdPhy7jlGEOZ0UTXvSd
RK5GuM05hTyHOHJdYzgneu2UaLX9rga2Ci9vFS+wU8GZeMxtEjsFYwec2nPU
oQOnBGNnnbRkO2rZ207DOsHegR69KNu9E5R+8zplbHE1ZsGa0VTz2YodSjep
MhfoR3QK/EtwZhvnUKf0yVVTU2Ndz+GL9yh90spaD/VmYwPSvvqeL7D2qbXN
rH7ONkfbVFnJjV17mNTpV3o3a0Nsk1aMaObAvNYaVgm+1guv7WnhTp6LgQe+
kbwMSKQkKJU3IWN512MO7+NWUTowg8dDMrmVuoOrQ7O4NEKwMuoIl0Yf5+qo
U9wYfZrC0TkUKTFK/pbnCkae5MaIE1wfdkwwdpTLg49IHCZv0EEupuzhYt/t
5PbYQF7oSnIDl3AxYBFn9YsEV4s5HrKCI93Wcrjbao5Lns4JltcCZnFGO4Yc
t4HkuCSQLV70mE80B/0i2O5uYFVLV9a2dGC7s4ZMyZ/bJHa6Sh518pR86UmO
g1aw6c8ZZz/2OXixpb0Pp5JS+HD6lGU9BpNl9JrRZGnXMJqNDde6vkYZR2r8
EcOC/mmcNaw5IwSs8plgSZlvb/7GeGOzymfGz9TZZ+/6Bs4aP1TvgqKOs6hR
+wXeF94ia/R4UsVfRf/cnNQmrZnW3IkF4gNW/NKOjOauoql1XPfuzmNDMm+6
jOZ9rxm87bOIF3EruZ+8Xvgrg7y0HZwftY9z445wdsIJzk/IJnfCGS5POMc1
ifzxEuPOcHVsNpfHniJvjMSoE+QJv+UOOUqe4Oyi5NQLkmsvxGQKzjaRG7KW
80ErOGNYykmJQxJZnZaT2XUlO8NXs7/7ao4J1k4GzeOU/0SytcMkBnLUN5Fd
/n3Y6NuN5U7+zJW6s7y56DLxOjvb+5IpscvNl4PCXycFY+cd/bnqHsB5Z534
TR+yfA1cHjOBihvXrbrMkjP/X7PSf15r8WVW2WJU1j1QcPYDDOc/i7P62jpq
lTUt6hsd7KcB9p8DSenjMP+VWbDfwJmy1RnrhAerLf3LytgWxUMJ1qqePObi
4mVM8wsQH9CSEU3tmCh+YNLPLZklXmC54G1nW1/Oa7vxuNMg3kdOobzvAl5H
L+Z+70Vci1lObvIGLgzbxdmxBzk9/gjZE4+TMzGb8xNzuDjpLHkSlyaeVXF3
Xp4/M+kkpyeeJGfccc6NPM6FtKPkKjgT3ZabkEVuHwVnm7kQtp4znVZzQrB2
MGg5uzouZ0vYSjYKxjb1XM228FXs6ryUfcFzORw0lZOB4zkVNJK9Uh9W+oYz
WfAzqpkTk5q0ZUULNzKd/dmt0bNLYo+7TjyAv3CZP5ecAihw70iecwCH5Lmj
hq7cmbeY6of3wdZfqnoA0WZmCweYrGs3m9UhUuYf0rDxFc6+HEb334XCXcrY
LWMjcCh/q+vR1H96XtFn8l6F7+rN31jbGH4DZ2bJw1VUSQ5Q1hZS+5dVnFVT
+eABZ+fMZ4afnkGSO8c0s1dxNu6nFkz4uQWzBHfr20m99+nK/bCBwmNT+Ri7
gJKYRdyLsuDsUsom8kZkcXbcQU4I1o6PP8op4bQzEyxYuzAph/OTczg75TTZ
U09xbPoJjkw7zvFJxzg99jjnRyicdoi8lH1cit/NJcFZXs8MznfdQHbYWg6F
rmZHyEo2ha1gnWBs3Z/XkR65jvU9BXNdFrElZBa7QqeyP2wie0NHsDagL2Pd
9PSR8+jzx2aMFZylt9ay2y2QfV7B7PXsyAGPIE44GbjgYOCaUxBF7mFckf1R
Jz1nwvrwbM1G6p4/xbKWR5Xao2lZF8akahdjrbHR2uZfFsL32b7CWeOFa/7W
aFwf1CGeJsuc+9ovcKZgTJ6va4Szz6pS47FfDVgzqfiqE3yZlHEM1RWWOSby
yTLxAvtHjmaypw+Dm7ZieJOWTGxixxTB1wR5PLW5Hcvtxe9rgsgLiObBr8Mo
iZpJab+lvEhey/2BG0XLb+PCiJ2cGpXF0dF7OSpYOzHhKKcnnOScwmuTT3N2
6mlOT8/mxMxTHJxzgv1zjnNoxnFOTj7O2THHuKj4gJS9XInfyeXo7VyK3MJ5
yZ0nw9ezV/RYhuixNd1XsqznKpZFrmV19HrWR6ezsddyNvw6h/WhE0kPSmOx
LpbR7TsS1dKZwD/8TPc/NGFSMxe2OwZySNOZw95dOeDVmaMdwsSPhnDZsRMF
jqHcdf2Vqw4dOSbclhueQOmWnRhfvURtcTQrPebV1Ftn1SjzIUw1xs87jn8P
H/B3YkwZW6/MFayvqv0iR2JbUBDb4gbKXDmF0xqvkfPZaX6JM3Oj1g1lzQDF
O9X/36gXyFRL8akTrO7Th7GuHRgumBomGm2C5MuZLdoxo40DM+0cxH+6kN7W
iyxnA2fFD9wRziiJXUhp6kaejcwUPb+NU6mbODR0K4fHZHF4/H6OTzgsODvB
ucnZXBCMXZhxmnOzTnNq3mkOL8zmwKJsDi84xfFZJ8kWXjs/8hCXBu7haoL4
ib7bhNO2cK53BscjN7Ezcr3w11qWRK5mVvgyZvVYxlLB2Ia4jWyIWsXKX2cy
x5DGGM9Iktrq6Sa53vBzM/R//Jk+wsmL7P047NmdbO8ITnj35IhXd05puon2
78oNxy7cdujCfaeuXLcP5oSydkyv/pRt34up5BWWtowq6xp/llk1n3W02O7F
8nvg7Muhrr8VWPblpe95evs+rx4+plL+VtbTagCPOqGjTiBSZ5nv1TD+/nOc
fbU1YMxGlp+12Krj/KuK73J2ySKmGwyMcXZnmoO71H07Jis4k/18eyfmOTgz
WzC3sKkDa5t5kNXWwDmlT7vLWB4K1u4MWsvFIes4OjidA8MyODRuN4cn7pOc
eJAcwc+FqdlcmpHD5dlnyJt/hrOLz3Bq+VmOrzjHseVnOCaYOznjGGck5+am
ZnEtaQfX4rZxOXYLZyQO993M1r4bWBG7jrnRq5ncYzGTf53P3MhlLO+9giXd
5jDNMIIhHSL5c2s9QU0c8PtjU/x+akKnJs1Is/Ngs2dnzvnFctE3ltPaKE54
9eScZwTX3Htx2zGce/bdeOjQjXy7ELKF0671Eh26fR8mlc8UXaasY1ijIs3Y
uABsfPbvgLO/xmVY9v/17iP3rhVw9tAxDmzJ5PC2XVw+kUPJ/WJMHys/w1fj
7a/3Ov2VTXTa66t5nFu6hKU9Ixjl4cU4wdh88WOL7DowX/zZ3Ob2LGrrxPy2
jswSnpsvuXRlE0c2NxOdY2fggGt3Dvv143iXMZxOXMT50Zs5M3mn4GsXxybv
4eSUA5Irj5A74wRX52RzfX4O15ecI2/Fec6vOceZ9AucXnuek0tzOCV59OzE
Q+QOzeJq8nau9hP/2m8TpxM2cSBhAxlJ61iWtJa58auYGb2EmRHzmRk+i6kd
xzFCm0i8fWfCm/vT8Rd3dD+1xvenpugFYz1aiJ9x07FfH8t1w1Cu+g3kzJ/i
hMuiuOAZzQ2PPtxxjOCOXTh324ZztU0Yp9p14nqvIXzYdgDzi5dqv6binarN
Sv95tTpWV91sHGATyL9L3jTTEL/h/xo/VualvS5+xpkDh1kxZQbTk4ewaPAI
Di9azoMDx/hw5SaVtx9R/eAZ9U9fYX7zTukMt6whpWitauu4Udt6wrb1pZSo
EO3/vozqV68of/KU8vuPeHb8NCcmz2FxSE/Gib+fJN5+tsRyBz/Wid9aY+fN
slauLG4lObNVWxY0b8Pypm1Z19SZTc06sKGpJ2uaerOqpY71HXqwt/MwTg9Y
yNnR6Zwau4FTE7dxdloWebMPcm3+cW4sPkXBstPcWHmGq2uE19afIXfjeS4I
zs4In52ZJvps/CGuDMsif9A2rg/czOVBGzk7aB1HBq5l+8AVrE5ZwuL4ecyN
ms70bqOZEDiAwfLbfVr5003wFSo8FiR1wdCklUQLQpu3JbadN3O13TkSOJQb
QZO55jeac16DOe2ZwkWvFG5okrnlEkehQxQ3HXqT1y6ck5I/L3UdxGtl7csH
zy3zOY2W+ao1om2NRtusT0t7uc2P/Yb9+jqsm5plzJ944lvpzgZfGy197Tdt
6yF9Ypsve76/pFpFo5UVP6Xg4DH2TZ/HqrgUloT3Zl3PGHb0SeRoYiqXh03g
8cyF/GVDBrWHDmE+cwryzsCNS1B4DQquwLWLlrieh+lKHlVncnixey+585ez
b9hEdiePYXvEIFbpegp/BbHAPoDV4rM2OnckQ/YZjgY2tBWstdKwsqUjy1u0
ZaVEevN2bGruLHzmJljzIL1pB1Y182ZlGx0rXTux1jeCbZ0HcaDfVE6kLeH8
pI3kz9/L7RXHuLPmFLfWZlOw9hTX0k9yZWM2+VvOc331OS5OO8qFUfu5OnI/
BSN3c2tUJrfGbqVg7GbyxqRzYthSdvafTXrcJJZEDGdiYDRDNMH0d9HRt5UH
Eb+0VudWRkqEiSYL/OkXgkSThbfwYJimC2sMQzgaNE08zBwu+c0g12cyF3zG
k+czhuveIyjQpAneBpKvSSFPE8/pP8VwOjCRorHLqcq7r3Riqmt2mWuqMSlz
UOqUdtpaZaa06gyqsMyvargnlkItJj7d49FW2LZ58ybbMkRmquosY3Eblork
89tU2ehSeU+1sf4b7Wefz6xv3J9t01TftCmKh3n9nre518lfs5k9cQNY6q1j
VitHVti5iufz44yuI5dCRUtE9eFWSiJ3hw7k0bjhPJowkntj07g1YgAFwwdw
Y8Rg4YchnEnpz76IGNYHdGWJJpAFDgHMbxMgXGVgdetgNrftzE6ncPa4hLPL
pStbHUPYYBdAemtv0lu5sK5VOzZKZLR0YEsLZ7a2cGVbSw+2tNSwqaWWta18
WNJKy1zZz3HQs0j7K+nB/ciKG8+ZsSu4sXAnd9OP8mBLDg+2n+XejnPc3XWR
4t1XKd54hXtzcrgnvvTRxBM8mnyIB8KDd6YKp01cy5kR88lKHMvq7snMDIhg
tHdHku09iRauimnWishfmhLZ5GcSWrUgoXUrwpv8QvAfmxD6cxv62umYruvP
ti5zOBK6lBzDMi7ol5GnX0yebgGXdLMkj04j32+SxDiJUVzxH8oF3SAOi447
HzmOih3n4aXS1mi0rudoWVv1/1VRZllvuky81TvhuCq1h92KM1uYLHSjTjOr
s07Hr7cUc5Vooap6UwMW1DEOwo9VCqYaYaS24TXjf4szW79PY7w2vt+0ydaO
UWVdO7C8CuPDZ7zdsZ+Lg0eSZejMLsHbXo0vWS4aMkWfb7N3YIezM3s83Nin
cWe3hwtbXR3Y6CT5zcmeNS4OrHR2YomjCwsdPFjlqmNT+05scOpEepuOrGsZ
zKZWYWyz68YuhwiyXCPZ4daLzYK1daKF14pHW69o6NYObG3dju2C9UzBXWZr
NwkPtrfWsLWNlgw7Xza082elxNTmGoY3dWWMPDfbtxvp3QawZ8A0ciav4cqS
nRSuO8ydjBPc3SqYyzhPsei0x/NyeDz5FI/GH6FozA6ujFxDzpD57E8cz8ae
KcwP7MFoTQCJ8nu9f7EXXLUi+pcWEs2I/PlniT8S3/wX+rVoLrhrxq/il3vI
MQyW81gYPJ7MiJXsDxefErae7FCl3Xct5zquIDdoMVcM87mun80N/TRu6idy
M2AcVwNGcMwrjmxDf0onbsScfRd1To2CNWURMKVD06yMD6pR/5XVV/JOPHzN
F2sSNrgv86clbaut01irrPcctUk7RQFWG8XV1tWpvFXH5wiycdTfwmffGkNt
e0e11JMqZd1s1WdaD+yj1KPiF1SczaNk5TpuJAwgSyc5zbk9GQ4u7BSsHWzn
wpF2zhyya8eelq3Y2aIFO1u2ZGcbO7a3FQ4SLK4XLZ9u354tkmd2enQi0ymM
LXahbGndmW2tu7LDvie7nPuwq300W0Ubr9NEsLJDZ1a7BrDewZOt4gN22Dmw
y85J9L8ru9t6SGjY1dZbPuvLNgd/tjjqWe8UwALB10TB2ugWXoy082OMayCT
fboxPzieNZHD2ZY8lT3D5nNw9HKOjl7DyeHpnO6fTnbsag5HLmB713Gs7pTE
fH0kU3xCGemhZ5BorHjh0D8LxnqJxu8tOOv7i0ST5kT93IQ+wmdxzX6R97Qg
qmkruv3cmkjxKsM1MSzpPJuMqPVk9s5gV0QG+3pu4nD4ek78KlwZuoK8Tku5
HrSQm4FzuG2Yzn3DFO4Yxol2SxYN15fCrqMpn74NThZZsKYmSJNljdWaCsv4
WqOE+ANTo46nxuP+lPGQtnWDK+SFSolq5V4NDWMgLGspGa1rLyt92uraSlj6
oS136DOpffdf6zN1ARs+IfbzMTqfzQux4qxSWT9TWRNFaZtVOFqZC6bMO1TW
EhCPUL57H1dHjGZXsHCQtx+HO/hywcOXK64+XHH04lI7Dwk3+bsD1zy0XPXy
J1er45SnP4fc/TngbuCgewj7XLqQ5dBVsNKd3e16keUcTZamH7t8Etnsn8gq
vziW+EaywjOY9S5adWzzrnaOZLVzYo+9m0R79rTzku/QCg/6kumoY6uTnk2C
qQ0dQlijCWOu6Lwxrf0Y2NybhGZeJLXyZbBDIKNEL030i2CqPoYZ+jhm6xKY
55vMHK9EprpHMtKhEwPa+ApmOhDdzIko8b29m7YTHnNQo49EXDNHEuX5+Kat
ifulueybEd+sObHNW8v77ekmfqB3cx2jfPqz+NdFrO2zkfSYLRIZbOqzie2R
69nTcy1Hu68UrC3lcqeFFATNFXzN4JFhKsX6CRRph3DRvS854ksLQ9N4O2YV
ZZtPUnmmkPrbT+HNB4vvMtlG0lrFmLmh0RLb3YxrVP1mUuetKHcOqlHnsVju
jWS5QZDt/kjWpGpsLO4+fR/fwpmSkE02rDWe+fE1H6oyUdGCyjgMwZm6brP1
/oDqWtjK2prKcy9fUZMtWnrSJPZ26sxBjT9npKyvttNyy9GH+86+PHT24YGT
lgeCvQcaHXe1Bq60F6w5+nLSOYCc9l046d6dY849OeoYyRHnGA57JHJAO5Dd
/oPZpB/Ecn0KC3V9WabtzHpXX3YId+4RjO0V3txr7y6hUXG2R357t/jTnYKz
bYKzDNcgMrXhZPpHscY7nJmOHRnVWidY8yVJIrmlPymt9fS308te8mCrAHnO
wMBWwWoktwiQ/Ocj+HLnz00diWxqbw0FY46CMWdiJBKbezBANH6SYC2xqZ18
dxv6iVbr26yt4MxFNJqH+IOOTNSNZGnPVayIzmBp7BYWx25med+Ngrt1bIlc
Q1aPlRz7VfxKyAJ1jFuh4Ezhs2LJn8X+o7np1Z8cpwiy3XqSq0/gcvhw7gye
xdtl26g5dQXjgxeYSt5Z1gxS1uNT1lxV18SvsvS1KOuumi198IriMln3al+p
8ny9dX1z5TPK55X8pcyXt67Vr5a58I9ZuXdInSW+bj+rt6z1ZbIajC/97Bc4
s8ytNKvjNtQ1KpT+dOV+Eeox11hEpHJML59Refwot8ZPFk/UlRNttVwSvX5P
yvuNh4H37Q2UCMc8ttPwRPD31E2w5qrnkmitPAcDVz26ccmjFxdce3PeJZaz
bolki9c64pNKlv8w1uvTWBQwiNn6fizy6Uq6gjPJzXsldypz1ZUxzTacKXy2
U3LmDsmZ25wMZLgEsc2zO9t9o9igjWSZpgdz3Low2SmUcQ6hjG4XyvC2wQxp
Y6B/C73wkL/wkI6kFoEktwkiQbxJfGt/Ylt5ESM+MrqlK31aCKeJx+3TzJWY
pu6SL91Jbu7JoBaeJDd1JlmwltLcgX5NxRcIHqObaYho6kOSQw9mBs9gtXDY
yvhMFsRvZU78ZubHb2Rp33WkR61la+Rq9oUv5+Svi7kQOo/84FncFl/6MHAK
L4Km8CRA/KhnP+G13lz2juayXwxXDf240TOVgpRJFIxZwL256VRsPwzn86Ho
ETx4DI+KJcfK/vVzwWCJYOiNYEbwWPNRyrLC0h+jlKWyFrqyFkOJhHI/hxJ5
/FriuXDlvefU37hDxZV8yq5d5+PNm1TeLfrrODOZvjCVX7dxKB5XuU94A/Mp
62uKBjDXKPXCui6PUkcqyuR4XlB9IptHwybLuXfhqoOO26LBSz2CqNR04qPw
y6tWGl5KvBYcvHAJ4K74wFuOQdx260ahWwQ3XKO57prAFfcBXNCkclw7jCzf
EaTrhjFXN5hp/gnM14qOd/Fnl70r+0WbHbRzkb0NZ97CZQrX6djuaGCL5MlN
zp3Y3L4bGd6RgrMo1mqjWSGxWP6eK/lnZvtIJrv2ZJxjN0a168JQuzCG2Hdh
iGMXBkkuT3EJIUnw2k/qTKy9N9F2HejTyl3w5k6s4CqhuVYwJvm3hT9pLX0Z
IJgaINw3sIWb5GZHwZkLfZp6qzlzkOS8eUrO7LeTlYm7WJCwndmJGcxL2sSS
fhtZE7uejOh1ZAmvHeu5grPdl3Cl6wJuhc3hfuhMijtK/gwYyz3/VO77D+Sh
/wDu+MVzXduHS1KHzglfZ3t25Zx/BMWRQ6kcu4D/mr+G8mWCu5US6zdSuW0b
lXuyqDpykKrTJ6i5eI7aK5eou55P/bWb1J65TNXBHKr25VC57xzle85StuMk
pRv38XrlVp4sTufRqk282LGXd6fP8fFa/m/nTRvOvtFe3Lj9rdaKs8aOxajc
80W4zKTkb9v6PArfKn+/KqFuzzFKh0zhrvj9G856Hgq+ytwDKXc18FFw90E0
+gcnHW/l8XOnQIodgyWvdpX8GsFdF2W+ZTKFHoO5ohnOae1o9vmOJl28/Vzx
9tP8xed592SjfO8+0fxHRf8faeMuWNOw396Lfe18JW+KrxCMbVPa3JxD2Oja
mU2anmRoY9joE8s6336s9k1gqbYf8zR9meHeh0nCoxMkJrpFMUkTzRiJVI8I
Uty6k+gWRj+XQPo6+hNlr6W3/FaUeMy+wtdJdv4MtjMw3L6j8GIwY9oGMlxy
clorH1KF//pLHo1t6iFeQXDWwkCaJol53ZcKl+1kScJOFiRlMjdlKwv6b2FZ
UgZrEzaTEbeRrJj1HI1K50zkKi73Ws6tHku4320+twzjKRCOf+A3lOdS9574
DuC2Rx9uuvTinmcUj31jeCSYKxLOviUcftu3OwW6LuQHhHIjqDM3Qrtzs0ck
RX1iuZOYxIPBQ3gs2vrZ2EmUTJwpPnYOz4Qn7iSM4GbsMK71SeV8zwGc7JHE
4Z6JHI0ZKJ57HLcXrebj4VPU3y+mvuzj346zb/ULwGe3Nq832/AnOlI+Xys5
s1adz2VZFU59VblXiXhRY+YRSvuP47pvKBfa+lAk2CoRbFVIrqx01vFB+Oy1
4OGl8Nlzh448c+rGM5dInrkl8Nx9MMWaERR5KW2WkznmN5ktukks1Y9nvm64
cFFftrt05Iidlmwp85N2XhyT8j8kfLNfvm+v4GuXcNB21y5sEc23sX1P8apR
pP8pVrgsgbW+/Vktmm+FxCLfgczVpjBDfNw0bX+m+wxgpm4IE4QnBnvGkODR
k0RNOImeXUjw7ER8h0Di5BziRfclOgQw0CGIoQ6dGe3UlYku4Ux17cZExxDB
m57h4nGHtNaKP9DQs4lGcBbAMG0yc7svlhwp2IrbpvLZwpRtLBasrUgSTyDc
tqXfZrJiN3I4ZgOnBWt5kkcLIlZwt8ci7gmnPTBM4FnAOF76D+epdwrF7jE8
cY2iROpMmXcs7736Sg6JlHzRlYfKuCLRwDfEj91w9SLfTcsN8WkF4sUKtHoK
/Azc1AVTqA8THdiVm4buXNV35ax/GMd9Qzjo24n9ujAOh/YmJz6V69Pmc3fL
Lt5euEx98VP1HguKZv8mzmye82/AmToe22Tp4rAOn1NDaaWplu+oUu4pp95j
0zoDQtFrig+9+5iazbt5IMeW46knp42G26Kbyjz0/EXK6bXg7kVbP0qdA3nr
1pnXrj14I9frnWYAZZ4jKdVO4qnfLG7p5nEhYD77A+ezSbxXuuiUDMHHfreu
nBYuOS9ledben2zB1zHhsIPOwewV/tol+NrePoIMwdcGue5rPONY6ZUgGO3P
Sv80VokWXyE6Z6nEQv1o8ZejmCHPTdONYGrASMbo0higTSTBK4Yk4YgU8RAp
/r1I9u1GkldnkjqECtdJfhVcjXCNYJxbbyZLTJH8O9mpC2PtDQxr40eaHF9c
c414AHfJtQGMFvwu6LmY5fEZLI7bIljbLBptE4sklguPrY3dwOa+69kpufNA
1DpO/HkNFyJWca3HMooEn896LuOtMr+543Re+g3nlXYQH3wGUu6dzFuXaF61
DaesXQ+q5Fgq3XvxXo7xrSaI114BvPTW8cJTx3PxYU/FqxV76HjgruOO7G9K
uVxx04sulrLyMnBO34ULYVHkxg7m6php3F+2jg8HT2Auuqfev1tdA1MJRc/V
fMMHmBupfFvjMF/0dX4aSE19rVm+yii50vx5W5vZ1tZmtq5zidqOgg1rSvv0
vWIqNmzjZu940fT+XBXt/twzQPCk54Xkt9fiM6t95ZqIPi/T9Oa9aNtybRqV
vhMp183hrWGp6JFV3Oi0mlNh4sN+Xc2ObkvZFziO41JfL9gFcrltALntDJwV
D3nSOZTDgr99HXqxS/C1zSuWTcJf6336s8ZnECt801juP4JlujEsE25cbJjE
fMNk5sh+unDEJP04xgneRkmkCW8OEA2U5D+IJF1/EvzjiPeNJNarO309OhMr
dSNRsJwmvzNRm8Qs4cVpmnjGSRmPbRfGCPEOQ1r6MMSKs+5NXImV/Do5MI2V
fVewYWAmK5OFz0SPzY1awwLR/0tlv7r3GjZKZAqH7e+1mmPiPc92X85l8Z+F
nRfxpNsSSrst4k3QdF77jeS93zBqpH5U+Qym1EE4rGUYHwVrdR7RVDp0pUR8
9DvRGO81esGbaOUOil6WXOLuzyvxYoofeyTlcVviqoIzjwDO+IeQ36sfz8fN
4EPmXiqvFFDz+Bnmd2WWcjVZ2UbpxxeNbhJ/+tvttMbPgdUYY406SRWc1VvX
vmzwCWYabmneuM/K8q3KPLtatYVG9aQPHlK2dr1gLY5r/qL3/xRAcXs9T111
6loFdQHRcp3iKPeJo9JvMDX6CdQY5lAZtJh3Qat4ErqOol83kdtzGyf6ZHJc
8k122FzOdIgXPxvCdbtgrthLbpZrmiNcckzK/YA2XrxDMtuF9zYLXjYIX60S
bC3VjWWxfhKLDFNZYJjGbInpQTOY1nEWU0LmMDFkNqM6TmNIwHhS9GPUSNSP
Ik64LcYvkWifaPp4RdLXM5IE7z4MEp03Rn5jZsBoFopumuuXylSPvkxxj2CC
Sygj7EX3t9ESJf6zaxPxnuKr53YZxdbBG8gckcXaAVtZlrCBxbHrWC4ctkb8
5kbhse3CY3sj08UHrOV0t1Vc7LKc6yGLud1xAU+CF/C641ze6Cbz0msoLz36
87ZDiuSJRN46RvHGPpwPjj2pdI2kzCGMEjvBmfju94KnMsHXW+EvJd50kJyi
MQivGUTf6bnWPkDVcQ8ik3kyYTalm3dSdy5XPOZLS/uZFRzqWphmUUmKbjKJ
bjLXq6PgvsbZt3rdP42JbcBZ47fZmtq+8AxftoNYMKfMT1XuI1xtaaeprqSu
4CZvFy+jILw3ud56CqVuFXsF8ca3KxU64XddLJX+SVQbRlEXPJOa0CXq3PFX
IWt40GU9hT22cCl6N2eT9nNxwAEu9VzJxfYpXG7RhYJWnblmF67OwT0rXu6E
dxIHpez36EeQGTSeLcHT2NBpJssDpzFPP4W5hhnMCZrDrKB5TAuex9SwhUzt
toypPVcxWTT3GMlLQ7rMI0U+kyyckSB811c3mj7ynX38komV40zSDSDVkMbo
oFFMDp7ILPGA84OmCtbGSQ5OY4G8Z7ZPJBPEZw+086ZXk7b8KpEomm5phPia
sVvIGpfFhsEZrBuwhQ2Ct4yU7WQmbSOr3zYOxm7lZJ8MzkVsJK9bOtdDV3Gr
4xIeBC7gmWE+b/RzKPWfwvMOadxvF8e9NqJrHfqo6+h+EI1WKr79hejF16If
yjxC+eAeJDjTq5qlVHjrdYcAXsn1f+oTzB1tR675duRKxx487j+S6tWbMV+9
CaLt1fazGqu/U0vW9GkeMp/6EpT4Emfmhj6D3xgd9i2cNQbUF9Bs/DEjtnVZ
TNQonKqu9VWh3ie1Jvs0N/or7RQ6rmgN3Bd/8NKvO2/9I/mgi6dcP4jKwDFU
hsykvMtS3nVbw7PwDdzpmcH1yO2cj91NTsp+8oYcksfpXGo/mGstwilq1ZMb
dr3Jc4rlbIdkjmmHiG4dyS7Jg1uDZ7ApZD7pXRaxJGSh4Gue8Nd8pgovTA1Z
yrSuK5kesY7pfTYyOXoj40R3j4pOZ1j0WlIFcwO7LiFJsBgvvBcj3BatG0qc
4CjFMJy04LGMCpkkHDiNqYLHmYYpzDNMZGHACOb4K56iF2PcDAwQnxL5ix3h
Te1JEV26LHIEByds5uCk3WwfuoXtQ7ayc8gO9gzayYGUnRxJ3MnJuEzO9tlK
bsRmrnaTXBC6hrsdl/PIsISn+vmUiKZ4p5tBqe84wdpgHjsn8MI9nnd/SuCd
cPkrTSSPxQM8dRHdq+KsI+VugZSp99rT80wjHl8wVujXiWv6zhRFxvNy2jyq
9x6GqwXwtuyz3GjB2KeVKBvf57LCGl/izHK3ZMu/b94D/ls4+5K0vtX1YE29
ddjWqpHMqeCsUrnn3EdMjx5RPGcRZ4K6cN4niELfMJ6Krn7p15u3uiQ+BA6X
PDmONyHTeSUa5EXkeh7FbBVvvUO0qFz7+F0cU+ZPph0kP2oDlzXDyG8Ryd3W
0dy0lxzqksIZzyEc8R0pXDaB7VL2G0PmsbbLElZ2W8mS7mskZ61maugyxgcv
YULYSqb03MBMKdOZSTuZkrSDscIno5K3MmbgDkYLv6TJMfTvvJykTguIC5xK
jGEscQbJpx3Hkxo6hZFh0xkXOosJknsnCc5mCs5m6YczScp6pHDJEPHUyXYd
iGrejj+3cGCQ5KoVkUM5MmE9J6ft5uDoTA4Oy+Ro6i5ODM7iVH+pS4m7OBe3
g4vR27gcKXWs+wYKu6RzJ2QVDzuu4EngEl4aJHcaJHfqp/HafywlvsMkNwzm
nXiMd8KlJT6xPPPsxSOXMJ6Jbn0v3qjaI4wqz86i0UK55xHINc9AbgT14MGg
UbxbuxGjslbHk6eWtdSUewOqbfDWe9Za+6wa901+Oe7ia5x9YrTfHGr55ZDq
b3ZIfSOsftSCd8uIYlNNuWWunGjIqkMnuDNgJNn+oVzWduaxLko8ZQwlerk+
wg+vOk3mSedZPJTcdT92E0XJO7naf4/w2G4OJ+/i0KAsLgw7yI2YTVzxGiU5
M5b7dgncchrI5fZDOaMdxWHdROGyGWR0mkf6r0tZ2WM1yyLWi8beysLe25je
YwPjBG9juqxlvOSlKYKzGQP2MD11P5OG7mfc8H1MGHWAcal7GRqdwQDh1WTJ
4/Gi4foGTSG+0xQG/DqTYT3mSY5dyHjxgBNCFwjWZjI1cDKTdcMYoYlW2zuS
7HxIaKP0HzgQ3cqJod4G1kYPI3vKRi7M3kvOxN2cG7WH3KH7uDRkH3kD93Ap
eTeX++3ict8dXI3aRn7PzaI3BGu/CtY6r+Hxr2t43nklT4SXi/VyvURzvhQN
+cYwkjLJ5e8Ngjd9smAvhiftu/HcIUT0Wii17cOpFR9T9n9FUKgN45JB8mTa
BKr3HxEOKJY8qdxz8p1lTVOjtZ9Hbfsy/zYOGmHha5x9rc7+bpz9ld80WfFd
qfaY1VrWGFf6Dj4K3oqfU7JmGzmdlLHJnbnvH8Nj/3680qfyptMknofN4EH3
+RRFraIgcQtXB+/mQtoeTqZmcWiIYC1NcDZ8P/nRG7jqPYbCNkk8cBhEkftQ
ycWjyfGfyAHDdDKD57Kx82JWh69ieeQGlggvLuu3h2WJB5gr+XdSRAaju69n
eHg6I3tvZILw2TTB7/Rxx5gy8RiTJh5ljJT9EMFZStfVJArO4jrNJla4NlEw
NqTXAkZHr2BizBomi0ec1GMFk8IWMFE02ij/NAZ59CaxXSDx4gHiWltwFtvG
mdG+QWzuN4qLM7dyff5BrkzZx42xBygaeZCiocpaDPu5IZjPT9rNtfidXOub
ybWoLaITNgveNnJL6sijyE08llx/Wzj2pniau+KbnwVN4I1wbGngSN4ZhlCm
70+Zrh+lPpb1wT969KC8fQ/eaMJ5qA3nfrcUSqYvp+rkeVDGf1dZ+5zqK9U5
eiabq2t8A5kvb8DdeLBi3dc4+3IawG/irDHevjH28rdwpjSTWGaUmNU5OOox
K3MylT6zyloqc65R+P8R9yYwVWXb2vZNTnKSk1RSqVSMKVPGJiiNlDQXP/wI
gZ8IsUFLUYRrg4LY0CuIiCJKL6AgCkoPojSKIAjSSN8pYK/Y0KgI9s2xYowG
5YPnH2tvULSs8/03+XMPZGYDe7HZrPWud7zvnGOOsd6fFuPlXDVaTffsTfSL
pukXnniwOIo7K+K54pTGeZdj1HpKvPQ+SblvPmW+BVT4nKLR6yRtSh0VQ39u
THXnrpY3Nw38aDUJpNo8lNNWezkm2j5l6SES7FOIc8jigPNJDrmeIcGjjDi3
s0SsKyDAPgtvmyQ8bBLYsjIVf9dc9vgVE7SrhD2BJYKzU3iszmDT7wlsEMyu
WxjJusXhuCyPwttBYu/6FHavF13nJGNlMrtsDrBNcOZp7MkmwZnztLk4TjJm
jeBsxTjB2a9aBIgeOrFpN5eiTnEzppxrQcXcCSihZ3sp3b4l3BWs3RReuypY
uyj83eqcx3mnbOG247SuFmyKN7jmIEP+r3b5Hy9KvL41P5SHC8N4LHG839yH
/tniP42deS337x8mTrwSj9yvt5w7OqLDBGO3bVx5uT8DLt5W592o+oG/Efp6
Iwh7p4pBA6qcjZFM17E4+/CdMYK3P/vNf/XxvaTxUfE1/DXuvqfhRoCr1otD
I3O3H9U8rMrvEE14pYeXYeIhrVxo01tFp7Ebfeb+PLQK4eGyODqdUrkk/qvO
/ThnPY5zRvRL2fZTVPufps5H+GyTeM/FsVwUPruluZlOvW10GO+iTWJltfBY
ofBKpui7RDvhMod04tbnEud6moOepSRsKeew9zkOeZUTuV7i44pMNgvO3JaK
x1x1BF+XTHb65hESWMTubQX4OGbgLj7UfdlBXCRGutpH4emwH1/nBHa4pLBz
k8RguSf8VySybUksnhaBbDRyY4PEzQ06v+OkYcbqiXrY/TwVh/Ha7BZNWuQW
zq2YUjoPVNMRXMK93Wfp31nGQ8Faz9ZibknsvuJRQJvrSVpcTtAk3qBR9EOz
6MeW9dk0r8mkUe6zFts4rtoeoNs+jv7lMTwSrfhQtGGf0UaeGYivMnTkD6O1
4itXiL9fygVjO26t3sbrhFwGL96Bl2/VSbTKHJTo6Lef/smLwTei6QdUu44/
juwHVX2MTYb9/8hn/z2cfW8j1PcwN/wVzlSxU+L7+4/v+T/DIxys6hMmX996
wqeMSjk/gbTrOXJX/GGv6U7BWQT9dkfoES1+ySOPc4KxArdMCrYcp9z/FA07
i8QD5NK4OpFmqzAuGfqJnt0qcWAnHaKH2+ZFUrVoPwVLD5BuF8/hVYkSK48K
f+VzaHMJB73LSPCpIHlbDen+9ST7VhPrVkSgcJbX0jg2LIpkk/1+fFySCd9V
QOSuYgKEU7eK//Rdk4TP2ni8nQ7gs+GQ4PEw21yT2LrhCJsdEvCU6+1qvRdn
M/EJgrP1cp1d9OxYr22JwyRDbJV8jXE67J61mBK3aDpjK7l3oJ47wWfp3VPG
48By+oTXurcXcVP04SXRCi2iGRpk1Is/qPMQHvcsoEn0ae26LGpXJdO2JoVb
jqn0SOzuXR5Lv+DsmaW/+HZv3s5ykTi5hv5py0S7LqJV6RfkGcY/T9UwfEfi
5Is/RrS+Ogt7UMZbwdrLoXe8Qd1PQ93xYMx81+i+0LHjX+iz/xvOvv4cOwfy
naHC28i+ltE9VCNv653SP0ni/kdVj+lBdU6x0hvijmjNEy08XBfNFSMXwYk3
D01302+1jyfi7+5LvLgk57fC7Tj5bhkUeB2jwu8kzdvyubApk2ab/TSL1r9i
uI07BtvplHjZIbhrWxxNlW0Mp+wPkrYqgXjHJOKE+w5uLiDeT7hsezlH/M6R
tqOe3KDznAy5QHZgI4clVgWtTRWsReOyLByfdXFE+OcSE3iaYM9jBDinESi8
FSC42uFxmO2eh/H1kFjrcgg3x1jW20fjKN7FQTzCalM/1kjcXD9rI66iCVz0
rHGcaoKdkq/x80x2GS6meKPgLPoc92ObuRNSSU9IOQ8Eb927JWbuFIyJL7gg
WqFh80nqVKOA+i1FNPuc4YK81xbhudb1x+nYlEuX3Ed37BLoXLiX/gUhvBXt
+GlhEJ+E197orqVrojVXDSRmuofyuqwJlL4dSn9dBWNKf2ZFzwyruwB9VO1q
/6gaH1TffTMfMZZXvhPq/oSzfyHMhlHXkhpU5eKqe3eM/RxU6S1VBSn1Wuaf
stXUpKbG2Xv+eP+WgcGRStrKfIySgN75EnJbeLBWwZkHPcb+PFXmHecd5Kld
JvfXn+Si20kqXY9T6JpJkcdRqryzxY8d56LcuxesQrkwy49rBr7cneXPXfM9
3LSOoFXiWtWKA+SLPk9dKzFzfTIHJPYe3FpIgsSlxF2CsV21HN/TREF4O2ej
L1O27zKFoU2kir+M2pROoNMhdm2MJ9w7nSjfLILdU9mzKZkQj1RCvJMJ8k0i
wFdi5OZ4PFxicHbYi8OyUOznB2NvsYsVCs5MtrDexBVX47W4Gy5lg6aF6DM9
Vv9swI6ZSzi1NorbYYKz/Re4FV7DrQjx4BElXA05TdvuUzTtEA6T2F3rfYIa
73zqvQtpEoy1bj3L5a1lXPM6w233Qu7L6FmbRceiA9yyDOHR/DA+LI1icFEo
H5Sa4bqO9Grb0bc2kLfl5xl88ZqhP/6p6mWhzpMd6WOgzAUofSEHlZpQAyrM
DX9zPT+vA/BnST5qD/47OBtFmrpHzKe/HKN4+7MxUL835fO9vOf38v4/Do/8
XFmMV6jtnvxv2S3cXhZMy4yN9JsG8XZBPC+tE3kiOOtyyqF1Uw7n3I5R6p5J
uUcm9Z5Hubg+jesSE68Il13U8+G64Oz27J3clnN8XbjsguiUc6sPcWJtAslO
Rzi4MYVYwebBbYUc2VVORnAtuWFNnIq4QEnUJapjrtJ46CaNCdepOtRO0b5a
MvecJtY3g8CNcfgJHrY77RfcHRJeSyTMN5lQf9H+/kn4+cTj5rIPx9VhrFga
jN0CGZaBrLLYgZO5L84mbrjMdsJjlj2uutY4TJgtOJuF3wwbTqzcy42gCsFZ
K7ci67gaVUFbZDHN4YXUBZ+iKuAEFdtyqNiSy7ktJ1Q4Oy84u+Jbxs1tFdza
XEqXexEP3Qp5IH74jnUMXZZhPF+wl3cLI8RrbqNHR3y89kqeLvLlQ1IJ9L1W
xZzB90r997dyy39Q7cFTzQMo+TWq/qcj6+JD3wTEkRmwTyq9PTymR+iXmt7f
Ww/4fm7G1wtOQyNYGoutgZHxkdE+RYMju7XGbmxX1jblmOGPjGYKqWs+DKo3
1Shv6LYogOQa8UrbqNNYy1PR7+9tEuWcxPPALomb4t9ahMfObc6gfHMaVe7J
NIgOumQfS4dgqsPQVzWPoXjMDtM93BDtf9kmjqYVhylfk0juuiSS16eKv8yU
mJlHgnjIlF2V5IQ3URTVJhhro2xvG5UyaqLbaDh4icbkq9SlXKTwQBWHd2UT
6BKLz5pwvB0j8dsYyy6vBIK3pRDin8ouP9Flmw/itnGfis9WLgvBXrye/dxA
iZ07cbIQnJm6s9F4HS5GK3GZaYPT5Dms/cUMr2kLSfl9B207TkncbOFubCOX
o6tojiylLryYyqBCynadokKePyc+pFbx194FtPoUcW1rKTd9S7nudZoO0Zz3
Ras9WneMR0sTeDI/mtdzBWPmAVzXWkvTFBvhOHfehOdAa7e6d9TQ4Aha5Coq
/XlU+z0H+Nyv+9PI5jolB3b4a300pLrmaqZT5hG+2r8i4833cPaXk6x/ZsWh
kX0JH1Tj04hiHPpcCXXoG2JUavEp+2IGhgc/s6/qQ+Gyt/JdvziZqk6e7TzO
eWN3zk93FpwF8Vr0e7fo6Jvimy6uP0zjlmSqtiVTtiWe8vX7qFoezHnRuB1G
W+jS9KBTawt3jHZxwzySS/PjuLD0CHUrkyldm07e+qOkuxwnyTOPJJ/TpG4v
I3NXlcTKFsqjL1EW0UrJnkaKAqrJF4+Xv6uU0+GVFERXkB6cz77taUQHZBK9
O4tAH4mRHofw35xAgOBsl18qfpuP4LExBrd1+3F3imWtrcTNuTtYZbUDB4tt
rDHbwgazzWyYvREnPXuctG1Yr7mI9VPm4TjBQryAA2Xuh7l3sI77Ry5wRXi0
Uf5+dVg5JaLRSveUCOYqaQ2tpnXHWVpEn7VtKeSK92nxB/m0e+VyVfxQl3Dd
C/c83q1J5w/r/bw22yNecwuNE21pEIw/C8viU/NdePKHyuePZRTV/iXBk7qu
8MjnaJ/473o/dSXYUcs5ur45irHv4+xb0/A9E/FlKArx3dCHEX04NPJ3hkaq
Ow+r6iCraoiObJYfHFTvlnknflPp1zuo8s7qN/WptY8X0ae5tmQ3F/Q2cMvQ
i6dz9vBYNOztRUFcs99Lu4twk8Slmq0HKHPdS6n9TsosvWgSv35Lcz29Gi70
avmIf5DjzfdzYX4CDUsEl/ZpFEscyV2XTcamPJLFo6V4F5Hme5aj/pXk72mg
NOw85SEygpooCazh5PYz5ImPPRVeRkFMJZmRp4kLyebw/kLSjpRzcN9p9uzM
ZKvw2Rb3Q2wVH+DrfoQtouF8XY6wXbyB64oonKx347IkmE0LdrFhzjY85m7H
zcwTR72VrJ6+hHWai1mvYY39z7NxmWpJpvxPHfuL6Utt5VpMIw0h1YKzOs6G
VVMRVUdTTDPtexto31HG+c2FtMu4tEX8gUe24C6LNp/j3PQ+znPB3Efno3xY
FMMb0RP9hlto1VrDtVXBDFRcVvcm+/DxL/Olv6e3hr47r/Xl90Y12ega51/h
7GsdP2YMjxljFs8/is5SNP37oYHPOBszbSIaTPCn9BEYU9hZefW3Evvfvnmt
ri+kHNgrviCjnlt2QTToOXFR11l8ph/PLXfz2DqYHtHTdxwiub5pP23u0TRu
DOPcf+2gfK4HlbPWcV40R+c0Rx5Pd+Wx7ja6jIK5aio4s4ynYWEy55alU7Ti
KDlrjpEmWEsU33rE/RSJm4tI9TlLll8FJwNqKA1upjb6Ig2xl6iNbaX64Hlq
UtuoPtpOcUYTmYkVJCacIS2lkqzUWuKiivDzSsRFfIu7UwzbXBPZ6ZFGsFzr
MJ9sdqxPZOuqA+xad5idq2LZuiQUP5tgfOcL1mZvwFHHFkeJl05T54kfMBFO
M2Gv+VoadyRzP6mBa7FN1IXUUhXRRHVsG3UJF6nb30Lt7nM0bC3mvHjNi3K/
tHufosUrW7g+iybvLC56ZdDrkil8lsbHJXG8swjhhYk/PcKp/f5pDF7sGelf
NgYkYzmN7+8PHxiZYfhuHs/Ix+AYTvsrnKlzEodHVuCH+dwneXj4y9zEGO86
pNTXVnpSDH36jM7RqWGVFlT2wwvGBoa/3A+Dov8HlHwgZc+nEi+VfuEl13ns
kUCrvhMNk2y5ruPEIzNfnoimefx7EP324fQKzrrXRtKxOoSLS/1ptnCjzsCB
+ml2tE+1p0tjDY9nuPHkP/25ZxzKTdMYLs9J4MKCFOpsMoT7MslbnUW6o8TN
9bkkuJzksEcBSVuKSfMp4ZhgrTCoUTzAJS6k3ObysS7as+9Se/QKRalN5Ihu
zEwTX5peybGjdeQfO0/6wXOE+Gay2TEGj9X72LoungCXVCJ88ojbWUy0z0ki
xNfuF92+d1Mae1bGssc+mj1LQ9hu6YO70VrWK7Fz2gLW/mrGqp8N8dSwIHv1
Tq7vL+HaQcGZcFdFpOD/8BXqk69zbl8zZeKRq5W5DNH/rVvPqOpiNQp/1W7J
ES96nGaPdO6sS+HViiTxmfG8s4zglcUeXtlG8f5gGcOdL74msdF0w2+4aTT/
Ymyfnk9jDx2do/309Wt8GoOzV9/B2ah++1Pvn39Fpqr9oWpfOzCs1oKj7+39
mKGqlaDUSB0Y6f+ubKC/J7r/5HleeR3irpk7V6ev5Oa0lXTpruOBshZg4c3j
Rbt4bh/GUxn9y4K4v8CfW6KlL890oG3yMtomLOGaYLNr2mr69Nx4bLxTuHAv
PeYHuW2VxLVFGVxYliWxM4vTDsc45pRN6oY8El3zOeJZSJJ3MRnby8mVWFkY
1kyFcFlz2m2unHjAhbxOipNaSIk+w+HYIo4erSG/oJXC/HbyM1rIiq3ikGhz
ZW7DXzC2bW08fmsOE+yaxYHtxRwUnxHnU0i872n2ux4n1CGesJUHiLTfR9ji
Pey08MJHNJmX+AH3aVY4/GzAyh90CDOxo9I3iYuxNTSKJzgb3URlfDuVhy9S
GlXPWfHItf4VXNhRJTqihBq3k9R45FG9RR6982h0z+L62hT6bQ/zZvEh3syJ
4LnFbt7K3x5KbUC1R111TYe+XNfv5A+OzSd7N+Y6fj5skD/LqhEqev8vcKb8
/I9vsDs0irPvbUof8/4GldoLnwZVdTuUXt/fLnWpdL/iLVV7mOXx0RuGC5t4
7LKXy8YOXNNcTu9vjjwz2MAjPWfuSfzsNXHh2fxtvFoSyPOFO4XfttI3241u
3bXcmmLHzQmL6ZBxd7It97RW0WvgQr/JDh6bR9NveUQwmcZdm2NcsZeYsjqH
s4454gXyyBQuS1FxWREpviVk767hdOQFzuxr52zsRaoSrtCQcZPKtCvkxFWT
FF1MZtI5zpy5QlVNJ6WFV8k5XEvW3jIygpV53pPs8zpOyMZMdjhI7JRrHOaa
w163PKLdTxInej16ozy/MoHwFXHsWxHLftsIIhftJMh8EzuM7Nn+2+9smmDM
f/19Ch4TZ5Nq60dN8Cma4oS/9jdyRmJo4f568SxVlAWdo3FPLefFr9RuPkPF
ppOcE49Z7a32oS3ic66J77m35BBP58fy1CyEftOdvFgexUBiFaq+2ao6FQN8
7tf9zZzW6CUfjU+jOBsYxcRYnI0VTINf54B9L26O4uztGOx+9Zrf4myM7VDV
LRpSYuTQ56eVrweGhr7mWmXTysPnfCqq5al3JJdn29M82YoOjcW8NFD6L23g
hTz26a3mkXijlxbuvLbcwgvhu8dGzvRpr+bBlOXcn2AjYwkPJy2jb5o9D3Xl
5wbO9Br7ik+N5um8ZB5aZ9K9LJvrK3NpWZtHxbpc8jfmcUzu/zS59slbBWf+
pRwPqqEg8jzF+9soiGrmZEQdJ6PryNtfo8LZaeGuxspurlx8TmPdffKPCpft
K+d4aCk5wYpnLSEjoJRkea0owVaAQyrbVySzzS6RXavTidyQS4TjUYLsBGd2
cUTbxRC7fC8HhZ+jrDzZY7yCPQY2bNcwY/2P01n3w3QCjZZyfFMs1dHnOHew
mTMxdeSElsk9UcLZPVU0BNXT6F9NlYfgzKWAao/T1IgGqPMpolW8wXXHY9xd
eIheyyj6TPfwQPTZwwWB/DOqgKHul+oaiMqe7m9xNnYJcQyUvlSJ58tcweh6
07fFpIa+PPX+Ozj7Nm5+5rPR1/yrKY9vOPfzktfgmP4oqoUAedWefj6cLOOR
ZyCXzJbTpGUpXDafBzpLeK5rq+rH+0q82EtDGUareW28llfGwnP6K3mkaUvf
pCX0/bqQxxPl+Km2vNKy58XM1TzWX809/TXcM/IUbRfO47mJPFiQTufSLK6u
OK7qIVEmMfPkhmyy3HJJFU2TLPEseccZUgPEd4q2zguvJzdceCqogqOCn9zo
Ks6mt3P5XB8POwboufme8oJrJIn3PBp+hvwI8Q8hFeTsLic/rJ7CqAuk76om
QnC1zTYJ9wUH2Pz7IQLsU0WXparyv8Nt49hrE0X04mAOLN5F9Bw39hguI0R/
EREzrQiYNAs3wZqbcFuopYv43ixq4xsoPyg4Cyrm6PZTnBY8nxOfXLWljCr3
Emo9ztK4uYz6zaUyisUHFNHhlEPnokPct9grONstWmIHXRZb6d+RwuC1B+o6
1aO10r+Xkz/mmo7mQo+NTcPfkt7YMXa/yHdw9m2ttK/02bfL58rbE+4d+l5t
UJVvGFLXQVD4WTnmzXuGr93hTeYJulx8aTVbRL2mKe2aFnTrWdOnu5D+afN4
Mm0+r3Rt+MPQjjf6gju9ZbyYsZSnmot4NHk+/RPn8XjSfMHYIt5oLecPvRW8
MlzFY8Flj+Czy2Aj9+W89s45SNf8JDps0rhkn0H9qkxKhVPy1meRKVopRZlD
8y0k0b+Iw36i07YXcSy4kpORdRREN3AmroXq9KtcLn7AwwtveXL9IzcanpAd
X0nM9kyOhhRRElNPseil/FDhvCjRUXFXyYs4zyHvUvaszcbHJhGPBQfxmh+H
n1zzoGWCs2VxhC8KJ2zuDqLEC0SYrGP3jEWEzZjHAYP5HPjNgp0T9Nj4ozbu
GlYcWhnMuagSquJqOBV8mmO+OeRvzqPEvYAyl0LqlJ4s3lW0+1TT7FlKk1sh
V9xP07k2h3vWh3hoHiFxM4gnZju5a+rBfZdIPla1qXP+FJyN7fPwPS4Z/nrO
4k818EYx8WnME9/k8H+LM1U9yBFbOTwWW99419FvlTj5cXCM0VCCp0p/DYzU
kRlW1/e4/5T39W30xibRbr+eWiML6mYY06JlzPUZZnT9Zsk9bQseaJgL1ix4
oT2XN7oLeDNjAS+15vJUw5InGnN4PFUZljydNpfnOtbCe0sFY7Y8N7LlkYwe
/eV0Gq6jSzRap8U+OubFc3VxEq12KdSsTOOMaJZc5wzBWRYpXjnCZ6dI2qFw
WhEZgaWc2FtLefxFWjJvc/3UQ3oqX/Kk6R3PW9/TXfOMuuOXSQvO55B4zOyQ
M8IxLZTHXaBgbz2n9jZTtP8SuRGt8pq17JdrHiSx2ntJIpvmRONpGc2uxQcJ
XRxD6PwQQi22EW7qSpjBKkK0rYmYPod4PStSDa3Yr2GM14+aOP2kT6DJWvK8
DlMeeooze06S73OM/E0ZFDllUeGcxwXPs1zfWss17xraXEto3ZDP9fUn6VmZ
Rf+CQzyziOCNmXhN0+2qfL5uu228S8ph+NZd9Z6zwaEvQet7fm9MDP02BWis
TP9u6eq/ygv6VzHxmzQQ9d8cUvUPVfbKqRpsqHzke3WtIKVGlXAYHfd5e6KM
2zv3cm7RSgp1jamYpkebPF7TM+G67mxuaik1g2bzUNuUx9pmPBOee65hyksZ
zzRMeKLU4ZhmxnPB4gtdS57rzeOp/gKJlUovavXoM1zIA8Ol9Bg70WXmzx3R
JTfkPF8RTrlgn0KtQxql6zI4KVr9mMcxMnzySN9eQMauMxyX2FcQpdTRblNh
rKPgEQ/KX/Gs/h2vmz/wtP4Prp3sFP6qJnPnCRknORFWLvx1ntKDreSE1XIs
RPRcZCtZoec5srOOAz6VRLoUEbDiKF4L4nCT+OVjGcEuqzDhsmD2Kjgz3kik
wUpi9GyI0bQkXtOMNLnvjsi52DN+Jm4/6eI1xYJ9c93Ic4mh3P8oFb5ZlG5M
o2xNGo3rc7kuOOv0rua2RwXXNxZzzekEt1Yfo9c2lZfCpW/Fa74z28UfJt48
NFrHHYu19Hrs5H1puboPrKqm1DfxauwS0CgGRj7GxtDvzneMnRQZCZB/wtn3
pv7/Qn8Nj6yrDym9g5TabUoPPlVd4/dqLlMwdrWTN6knueK6k2KzJZzQNuaM
hp5oMn2uzDTihoxr8vWN6Xp0axnSLxz3REfGNCOeTNKXoccjeXw81YhnWib8
U8+CN7Pmil6bzxMjK3r15tAjceaeroV8bUWf0RJ6Z6/jnrk/nVZRdCyM55ro
pIurUml2zODc+qMUuwofbM4lb9spcgOKyQ0qEz6qoUwwU5t4mdasu1w/cZ+b
MjoL++kre0l/+QsuZ3VQJNjK8j8pWryI/L1VFB1o5oTE2CTRd8m7KskWz5oZ
JnFzexVR7mcIW19AiGMeu+zS8bKMxNV4B36mAURY7SHGcjvRxhuIEw2aYmzP
YR2JkZOMSZpiRIrGLGInGxEw3gDXn2biI1g7PN+DSs94zm87SqNbGk1OqVwV
T9MlPuC+6LOeTWfocj5Fp0MOXXapPFqUwNt5MXycE8ZHEz/xV65ybyq1Naxp
txQdEnsQOrvUdaQ+DX2dn/pXS0xjYKTOv/+yp+kdY/zBKBhHzMOfcPbthP7H
b/6uCmuKP1Hi+gf1GHyn2k8yPLqnRKmZ3f+Ed/WtPIg+TOOydeTrW5I9dRYl
041o1jPmsqERl3V/45KGJu2TpnLl1yncmTSd3qkzeKQxU2LkTJ5O0eWJMgSX
TwWDTwWDz/VNeDHLgufGcwRnCrbM6JlhSo+OCQ9nWogfXUT/bEfRZ77cNQ/j
1rxYbiw5zBX7ZFqFz+qEz8pdsijxyqVYNFnR7lKKQispiZR4GdtEdXwbDUlX
aE69RnPyVdrTO7iZ00NHXg/NSZcFZxXkBRZzUh7z99WKH60nI7yK+J0lHAms
JENiZ2pIEwd8KwjbVMAex1xCnfIIF622Y2EcW0wD2SXcsn/uHuKt/Ik3ceGI
sQPpRstJ1rbk8MRZJP2qT9okQ8GaMQemGOP/sy5bf9YjWm8xBcv8aNkUx1XX
ZG5uyOCueJoe51zuy9/pXSPD4TgP7NN5IFrwyZxI3ohO/SD++4OeC+90HXj9
my3dMyy5aGROh4MTr3PyGHz0TK1vlJzmgVG9ptRp/KhaN/yK50a4ZtRLjq4t
vRp5HO1j/3li4/+Gs+8F4MGR3AplX6iSnzjan2R4ZM/vwFuGnz9m4MplXmTn
cmnrDoosfydz2iyyftWjWHBWP2M2LXpGtOjq0DxtKs0Tf+X8+F+4OG48HeN/
5d6EqfQL3p4J3l5Mn8lzTT3RYQY8nSlcN9OAXl0DHgpO+w0lvv6nGY/0zQRf
pvQKzvqVPa5KDDVaRbeRB7eNd3HLbK9otANcX5IgXiCJ5tWp1Io+q3Q7TvnW
fMoCSigLLqc07BwlEdWUSeysiGmiUjxATYLE0JRrtKbdoDHxEmf3iQYLUXyl
YCyqhlwlVyiyisTQChKCyjkcdI4jwTUkiN+M2XqW8E35BDkeJ2TNMSLWHCVU
PEDQvEj2WoUQZxXIYfF+SYKzJIMVJIo+S5xqJhgzJnWCARniAzIUrE01JuZX
Q0LH6REx0YRk8aXli3y4umY/PetTuO+Uzr1V8miXzEPRoP3Lk3m0OJ5Hc6N4
ahLIS/3NvNF25u30lbzTXC5YW8wr8Rr35F5tn2UqcdaNt7UtAhRlL9BbNdaG
1eLqg1zT94Mf+PQ9wTT8Ze/aKM5ej+Du8/z+mNj513FzSJ2ro+RXKvFb8Y2K
3h8cqRf5aaT239DILJtSt+9hD31nz9AQtIfsJUvl/M0mZboBeaK9SiXmndM0
pnzKTIonTKL4l3FUTBhH/YTxtP36KzcmTaZ7igb9UzVFj+nwcrouL7QEZzKe
6kjs1NXjgYyeGXrc+82QXv3ZPDIUXBlY8Eg4rU/HlH4tM/qFEx7OWM49PRdV
zvZdk3A65+znrviuDttErkj8bHXKoHHTMWrEb57bKp5N/GaJ4O3MnjJKQ9V4
K42uo/yAstbTTu2RdsqE6xQOO75btFxwKdnhlWRGVHIkpIy43SUcEA9xcNdZ
DgaUE+dfxr7NpwnfkEPQ6gxCxX9ErkwlYslB0WVhRM8JJM7cjwQTdxINHTmi
s5SEKZYcmWBC0ngjUgVTaeN0SP9Fl1ThtkPjdYn4cTohP2gSM8GYXMPlNC/Y
RueqGB45HuGJQxKP7BLot4nj8eIDPLPez3PLUF6Z+Itfd+edjiMftOz5qL2M
Ad1FvNOfK+fNjCva+lyyWMDTsFg+tV4XsLxV89mgepbso+ihd8MDI71Uhr7E
wzGTXWPXl8bO8X/mtBE/8Cecfc7nH1TjS5XjNjI+jXz/aQSMSux885I3nbd4
3FjH9bQUitzdiTEzJ0BjGiG/anBYYt4JXROKtGdTMFmP3HGTyflpHPk//0T5
r7/QpDGZK1pa3NXV5YHeTB4Llp4Lll4Ktl7P0OeVrj5PtWfSq6lLj2CuS37e
pWtEj/iHXjlX/YKzx6LRnuhY8Gy6hfgFK4m7y4TbXHhosJMHxmHi6/fRN/8g
D5Ym0b0ijY61mVx2zqJl43FqXLI5657DGe8TnPE/TbFgpii4jMKwSooiayiN
beTMgSbhr2oydhdzZPtJDvvnkxhYRLzEz5idp4nyO0Wk+NZ92wqI3XaaWO9C
olxzCXfMJGRlEhF2h9lnG0/0wmgiLQNV9YcOmngRb+hMwgzRZdMWcWTSHJJ+
MSFlnCGpP6txljZOm2QZh36aRtQ/JhH690lECNaO/GpKseEKLi/wo2/1Pl47
JvBixUHBWBRPFkTwfH4oL+fsUvWAf2vkIjFzDR917RnUtWHwtwXyvSWv9E15
IPfqHWMLemwknu5LZPDSTSGkPxhd0RyQ8Va+fosabx+HRubavrt/7etaBx9G
oTjCgX+a11Ar+5EXGclpGxzJ31ewrtRUePWa4RcvGOx7SO+5SirDw8ncuIHo
+dYEGBjhr6lNoIYW4VO1iZIYuO+XqRz4eTIJP08ifdwkTgqflQh/VU/ToFl3
BhcN9LlmZMAtAz069fS4Lzh7pKPgzVBwJn5AS36mITgTj9qlbcRd0Wl3ZprI
sWbCW3Pom2nFM515/HP6fF5PWcjLKfYSb914MnOHcJ6yJ3svTy1jebrwMI+W
S4xZlc4dBWtOmTTKqFiXTqmraDafExT5F3BKsHNCMHQi+CwnI86RK7ExI0T4
avsJIrccI9L7uGAqj+itJ9i7RfDkmU2ERw5RnrnskxHjms0+50yiViex1+4g
+5bFEmezn0PW4Ryy3EmCqTcJszaRoOdAgtZSuRcXkCQ4S5lgStp4Y9LHG5Ix
Xk+Fs8SfppPwowZxP0wh6u9qrEX9oEXar2ZUKvXyrH3psw2jf2kYvQsC6bPa
yWPLHTwz38oLEzdeGznyh569xMulKi77OHM+A/pzeCex4JWRGQ9kdMyypGup
I/+MOczg9evqGqHCTO+GX/Fm+LXw1DveiAZ/JzFsSJkDGTsvO2Y989s197H9
Kr7F2YAqX2NQlb84ODSyr330470829vP04Zm2pVeTmGRHFq1Fl8jY5wnT2Xl
z+NZ8eNPOAlfuYvW8pbh89N4fH/4mYAfxxM1fhKJIzX98ydOFd85nXLhsSpD
feoEZ42GepwXTmvX1uGq4LRjsiZ3J2lLPNXlnoYB9yT+dgs33tYzFc9kxvUZ
omWFx7q05/FI05qXGot5M2Upr6eu5pWWB89m+PNEL5DHs0J4YhbJMyuJKYuP
8EjZzyJY61D2rYs3qHFIpmJ9OmUe2ZzxyaNg60ly/fLJFrxl7ynlaFApiTsL
id6SRbBrKsHi9cI9sgh3OyYaLIuIDUeJlLFvQxYx8hjnnM6BNUqPukMcWLqf
+CWRJC4MJ3n+bpItfEma7cYR/bWCMVvipy4gYZIliRMtJEYKzibMFqwZydAn
6WctDv5jCgcFY/HCabE/aBD294kE/ccE9v59GinCf2f0ltJsuoFLZm5cMXXl
tpk7Dyy86JfvH5soe4FX8VLi7Bu9JbzVW8A7PaVGq5l8b8JLvdmibY25pW3C
VX0LOlc48yY1jcGeDgHOG8GHIGz4Oa8HJWYN/sGHoRGWGjuxMeoTh7+2mGPX
3b+37vSO0QrLgjRFA74XHL96xYt797nfdJ4LGcfI2bqTYOtluMw0YsWEydgJ
nlYJRzlPmYar+EfPadp4T9dhm9YMdunMJPQ3A6L0ZxGnL55dfidzuh7Zk7XI
mjyNZNFk8RI746dO4sjUiaRNmUT2pEmcltcrF+6rER5s+0Wbm+Lz72ibCsYs
uGlgyVWDebTrWtGuZcWV6Qu4o7GI3ik2PJq0XGKno2Bss2DMnz69nRJfd9E7
K4g+8QSP5h7gkc0RlWbuEt10bXUa5x1SxYemU+VyjArPHIrEi57ckkeObz45
O4o4trOIJN+TRLtlEOKcROiGFCI3HSVqfRbRToItR8GWxMj4tRkcXpNGouil
xBXxJNvGkLIokvQFoWQKxo5abifT1IM0I2eSJY4dmfY78YKxhF8tBGfmpEw0
Ew8gsfMXOU/CafE/6bBfMBb741TihdsOytgrWAv82wR2CNaC/y48N86Io1Mt
KdBZxFmJi3X6drQZ2XNVxi3BV7eRLX1GS3lqtJgXRgsEc5a8UGqdzVRqnBnx
QOJD5zQjrk435pKJlfjXTbzJOwZPOlURcFDU/btPz/jwUWLY8MgsmRI7R3H2
zZrmt1j7q3pB6roX6gowHwYGePn4CTebz1OansURvwB2263Gy2weG8Tvrdeb
hZvhbPwtrIiysSPJaSNZbp4cd/ci292Tk17elGz14+w2f4o3e3PCcT35tis5
+7s9ZZaLOW5sTozosR0aU/Ce9As+E8ezY+IvhE2ayKGJkyV2TCbv5ymUjtOk
7lcDzmuY0KZjSbu+tZxLGy4YLBXfakOzlg1tGku5Pnk5tyatoEtjvXjSrfSK
D+jS384dPT/uGPjTabybHvMIiS8H6LU5zH37FO6KPr/ukE6b4KRJ+KhWYl6Z
Ww6nRbPle50gf2sheb6FpHvlESecF7U2iX3r0jgo+i7e8RiHHY6RIiPdIYvM
VRlk2idzVDT5sWUHyP49ihzBWJ54y7w5fuSZepHzvzaoempk6CwjRUM8psJl
kywkblqQPMmM5ImmJArW4gVrcRI79wunxcj/HzdhBrETdNk7TovdP07B7++/
sk24LUBwFzFuppwv4cEpZnLvmpEjvvT0JFMqp5nTPMOSK/rzuG00n55Z8+R+
myu4myN6wly8gCl9usaiRwzpmCaeQHx86xxLenw2M1B6UrDWLcB5I7HyNUMf
Xqr6UarmGkZF2fdSrYe/znP8K5yp6y8qLXQ+8uTJM663XaIyr4BjkXEc9g0k
wcufo9uCORV2gJKDKVSnH+dCbgE3ikrpqayht76Jh03NPGxu4VHLBZ61tvHs
wgX66+vpOltGV34RvccKeZCUzY3oBJp2h3DG14dsj42kbVjDkVW2HFw4nxjj
2URN0WLvT4K5HyaR9ZM2p+QeL5VrUaVtLTHWjpZZa2gR/dGov4bGGQ6c13Sk
TdOZq795cNfYX7xmADeNtgv3+cq59hUNuJ2bJrvFf+6lZ+EB7i07TLeCtdXp
XF+TSbtw0/kN2dRuzKZcRolrHiVeBRRtLiDHLY9khbPErx6RY9OdcjjqkMvx
1XmckJG/KptT9plyHyWSv/ggBdb7OD0/jCLR/acttlFo6km+8Fie3iqyZ9hy
VPN30jXmkTLZUvCl4Mxc8Gam6m0WJzjbLzjb94sh+yboEz3hNyJ+0SFE2bM+
XouA8Zr4/awhmkTuzx8n4yt8t0vwGDZOl6ifddgn3jT+J9Fw8n2u+NXiqUac
m670BjHhonBZx39acN/Ykicmc1XzkI/1TbinY8BNXQMuyXm/vGA+nV5KH89M
PnXdVONLmcNS5uE/feDLftwvfvLzGONDx2Ltzz5Afczbdx94+KCfaxcuc76y
npbic1wtq6e36QofbvfB83fqfmgqkvyknlNWhpJn8nHgy14sZV/WB3XfAtVQ
8jVeymO/vOd7z6DrAf/nzh3eXr/M07Ym7laWcD49mdMBO0j5r5XEmFoSK/oh
YYqx6GRjskQrFyg9TcWntczawAUTT5rFu9Uae1Fj7E2tyTaazHfQPidQPPsu
2k130DrbjwvGvrQab+OiyQ6umwdzyyqSu4K1zqUJ3BUO6liZLjH0KJccj9Mi
o1ZG1bpcqjed4pxrAWfWi2ZbdYwswVL2yuOccsjn9KpTlKwqoHx1AZUrT1C+
/CilixMpnRdDqWUE5Ra7KTPbRulsD84YrOOUth15Gr+TLZrs+NS5HJ1iSfpk
0f+CsyOCsUOCsRjBWOT42YSOm0Wo6LTwX40InqCH/7jpeP88lc3jNET3arJl
ghYev0zDRXTFhh9/ZdMPE/CUsVOwFyH8Fy28t19+54AcHz9uKonjp5I5YRr5
oncrhbtaZ5iI7zKnV2LKMxMznsyazQNDI7pmGXNZ9PZ5+dltByf+SMkAuT7q
ddCRWlRD6gy07+ZrjMTP4eEvWPteXSpGto8PfpT4+VY87fM/ePPkDW9lvH8p
6u2Pj2psjf34Zv3ry8eYxLSxc31jE7tV8X1wBJtKTxXlb/XSe7WN62UlXEjL
oNw/lNxlG8mcbUvmNGuJC4sonWpPg54LLSa+NJrtoEIwVTQ3iKLF4ZxdGkHV
omDqxH81zAugSTxeo9L7yMyf84K7drNArliEcF2wdnPBfjqEf5S5tQ574bWV
WbSvPErLiiyahKNaHPNpXldI7ZqTlC0/TvGyo5y1E/ytLKR6xWnqVhTLccU0
25+i0SaLmnkJVFlEcc5sD9Um/pyb5Un5TCdKptnK/WHNyYmWnJBYeWKqlWBu
LtnTreR/siRJYw6HJpuzb6LS48+EPeI7A+W+Cpw0C/+JemwWbLkIZjaO18Bl
giYbJ2rhNEGplzAR+x/Gs/zvP7Hy7z+yWTx9uIYekTIiJukQJseEyDHB4sdC
fxhHtBybKLjMFj1SLK/VMFWbu0bi6U1NeDLbmAcz9bmtOZPrOkbc/N+W9K91
YyAlC+52q6/RoHoNaHDMDt3PGBjLbSPeYHRa9084G9uQ7tu1zW/ze5UlMcHj
R4mxH1V9z4dH9m9+VK2tD6vqYw1+HsPCccOqnCc+T7+ppmSUx6GvE4uUPpEf
3v/B++dPeXq1g5tZRVRv3ssJM2eOTbXl1ER7KrU2UGfgzTnj7RSaBXB8fjDH
7aLIXxlN8fIwKpbItZZR/3sQ9dZBNFjtFrztosk0QPC2izazIC6Zh3JVuOeW
tXDbsiTuLk/jum0Kl5amcNE2nSsrc7i6Op92+zwaF2dRt1CprZBDu10BrTLa
7Yu4Jji7Zp/PxUUZtMw5QINJKPXGO8VDy3tTegNNtiV3/DxOTJxL0fSFlOgu
5ayBHeXGKykzXUWxySryjO3JFM2epGdDvO5iYnUXETVjAWEz5hI0Yw4BM8zY
rmPCVu3ZbNachYuGPo6TNFn5y2Tsf56Anfh5e8HRup9+EUxOxk/wFSDPB01W
xnT2/DqFwHG/EijHBf/jZyL+9iPR//EDSf/4gaIJ42nSnMJlremi07Tp0TQU
vJlyVzzXLZOF9Kx2pT8xg7c3O9R7h/kSMr/KTfw2ho65pH/C2dikybGNFMc+
frNn4UseudKDUV339hPD31Cckqc2KLT76XNenbLl9JPgdODDIANKj6jhsbvY
x87jCZb7n9NbVEfjln2CKRfyptlzWmM1lTNcqNT34rSxDzkW2zn++x7yl4VR
sjSEyiUh1NiEUS/8Vm+zl/qF4dRZBlEnOGuQ+NkiWGg33sGV2QHcmRPGg0Wx
3F8cR+fvsXQsjOHGkjjhuSRu22XSsTSTqwvSuGqVRof1Me4szeXm8hxu2GfT
YZfFLZt0bs6P57J42gtG8vozfaiZ4UaFtjMF01eSM325vEdHahZskffiR4Pt
DppXCOZXBVJnv5NKm20UL9hMvqUbOeabyDLfSLLpOg6YrCbaZCXRZqIhLFay
z9yOMJNF7BAMbNY0wmXKTDYKb7lO0cV9ygzW/TxReO0n1v1jHF7CbX4Tpgve
tIUXtdg5YSrbBJPe//gJr//4B57/8Te2yCX3lxHyt/8g/h//oECw2DBVjzbB
c6tgu1bGWeO5VNg5cS0ugT+uXGNIWb8eGhVjQ2qt9i3GPvGvcfanPSbf+f7b
nMYxWBsY2Sc19J3DhuX9DI/mbo6+tJKuNjis7hE1PPp7X/rufSZR0QWfxJc8
LW2k1Xs/J0zWkK1hIzhz5LyhB43Gmykz2UyxuQ9nLf2pFI9XMy9E+CeCusXR
1C3ZT611NNWWYVSZ7qZO8NVs6MclfaVGgjc9Jtt5JJqu32oX9+cG0CXx9o71
bu4sCqdrUQzdCw9xb94R+ixTeWyZTv/CDO7bpQoO4wR/Edy0UvpDhHJbfEb7
TG9qpm6gXMOZCnlv1VbCbfZ7Oe9xhIs7j9K6O4uWXcKL/uk0bE2m1u0Q59ZG
Umq7m8IFfpy02EK2mafgzJX9s9cTKvhUciEPznEhydKFBDMH9s1aQshvlgTq
mLNLx5QgPXNCxUduny5cp/SOEn/gJsNVPJTLDxNV+m3DP8YL/n5mjcTXFX/7
B/Z/+xs2csmtZSySsUaGz99+IFyOPSCvkThBR7yJPomij9NNhI/tHakODOPh
mXLR1r3qHhTKeqiyB1QZqlywAfU60vDwyLLTkGo+9k84+x/8GJsS95n7VLkB
Y4WlsOTQW8GgOstp6MFDupNyKVgkek1zAVW69uIjN3HT2I3WWZtomOVCg3iC
RtFGTeZBNFoJzhbso2ZhLFWixSot91JpJjxnHECLUltUbzO39TzoNfQU/yXD
1J0+M1fuW7jRbeVJl9VWedzFA8HRE8sYXlsk8MbsMC+sDtK/JJpbiwK4bLGZ
66ZKrxtvbhluFs+7iVrBWI28btOCUC66pnN192muxFbRflg4+UgNtXHlVO8t
pjJQ/IN3BmXOhzizfK/gbBcnzH05LvfMEWN3wvU3sFt/PXvl/ztstpk0BX+C
u3i9ZRzSW0SC0RJiDRcQ/tscia/mbJtqjPsvuqreUV7jdPAWz7ltvB47JhkQ
IPwXoGuMn74xm0Xzuxnq4TxTl1XTpvNfk6aycvwkVv04gdWCxzV//xnnv48T
nE5g6/hpBEqc3qMtvsTIjLyVzqq+FG/rL8CTF+o9RYrGVuoMvXkzElvVlS+U
Vfi3grR/J85Gl1m/0pMqChtktI4zqij8TvVuVdWTnz6iL/8Mxas8ydSdT8UM
Gy7rO9BhtI4rRk60yuN5IxcuzPKh1USwJJiqF71fJVgrnx/NWau9nBVNVmkS
SJMy56HvLTrEg4f6Ljw1XM8zI0ceGa+h12Qt98zW0WPuwj3zLTwQr/FYXuul
STSvTfbxwiyMR+IvuuZ4ctNkAzeNnLmut46LOk40aznTYrSZixKnb7hmcG13
MW0R5TTF1qjy/M/F11G5v4pzYWc5FyBedfNxKtYlU2Z3gBLrcAotBWtm20kR
/xwpXifSyINE8a0ZZlvJFLylKOtVmkvkcQlZJvbEGy5kp8ZsPMWXek42Eh1n
xh6jeew3W0ba787kO/hQ5rGbav9waoKiKA+PoDAimJywQLKCAzkauIfUbQEc
XO9F2FIHtptb46Vvipv4UrdJM/CSsXWy4FVi9HbxF/7TDThgsZCa7Xt4XFrJ
QPcDhpQeKK9fj8GZuqKPMt//b8PZmDzw0Xj7Nc6GPuemoKoOo668hcJpb1/z
pr6FKvcdHNVfQIm2NednLOOKwUouGTmINlrDef11tBq40W60Vfx5AHUWQVTM
Fc02P5zT88I4bRlMqXjOuv/tL7/jwx0DT+7rrefRbw6qvkeP9ex5aGjPfeMV
9Bivpdtkk8TVzTyY7U+fcRBPjIN5JtrumYk3j/7XRrr1VnND257W6XbUa62k
9j83ckFi7k23VDrDSrku+GoWXNXsk7G/ltp9tdSHVdO8q4wW39O0uOfS6Jih
6glW+ft+eZ9hgrUgjok3PmK4RfhrK8dNt3NM8HZMz5njemvJ1F7G0d9sOGps
S8zMuWydYsRWLRMSlznTsDuGSzHpdCSd4N7JKp6cu8irC7d4c+UOf9y8yz/v
dPC88xqP717m0a2rPL5xg75L1+luaOVmaS3teWdoTs2h/kCiCpelW3ZyQnxn
hu0a4ufa4Cde1Em8hvt0PUKtl5ATGMT10rN86OsbybFQT3YMjdRZUXT7vxtn
Y1PovnpuBIFqB6uuRqQyKJ/Eh3Z00rQjQs67NYXTrajRtOaCxJHWWfbCUSto
/G0lF3QdRSe5CrdtocbUj7NzAjg9dzcn54lPEN9ZZBEgOs2fttlbhQs96Z65
jl4tex5pLuOx1lL6dZbRq2fLPQN7uoTj7s7aSKfE465ZftwTHnxi5Mtb0YRv
5Lrf11jOlUlLaNRYKv53LfVzfbjgHMPVwBzBWAVtB2uoizlHTWQlDRFVnA+p
5tKuKq4ptaQ8i7mxMZ8ra4/Tap9Gg02CYC2GswsiKbIM4aTpTvJFO+bP8iZb
y4kTWms4I9xZaLCKozMWE69tRZiWGeHG8znm6MmdrEK41QsPX6r2x/Jq4MsG
SSWX8dPYHZkjE0vDI3lfSuxTaroodeiU2ppKXcf7/Xy8dIPn5XV0557m8pF0
ivyDiLFzwN98Lp6zTfG3/p3kbX40nSqg7+5d3gqnKbXSQF3DTKnd+e/G2Xef
+/zl0Ej9K/Wn+tzImXn4mAshsWQbW3NymjllGhY0/GYtscqGekMZEksvCGba
5Zq0/LaBKmNPzkjMOWW5nTyrANUosNxBhcSm8ybiA4zcuSu4vD/Njn7xFk+m
/c7j6Yvo01nMg9+W0a2/gk7DNdwx2ih486TTyIunEhc/yNfvtCW+TlhC+y/W
NGra0WLhwQWHUC74JtEckkNd9Gkqo89QHllKVXgZjcGCu8BzXNteye0t5XS6
ltLpXMjtNXlcW5FFq22qYO0wNb/HUb0gikqLPZSb+FFi4E7BNAeKNVdzTrTB
2VkOpGvNZ++k2UTozSHfeQs9xwv41N2nxsq3G5NU4WHwS07XVwd8cyE+bzgZ
VufoKH3fXr5h8NFzBu7187ajm2cXLtNbJvdMcgbHhM/2eXoR4yf3Q7J4o9Z2
3ivxU7l64kvfiT/9t+Dsm72of/ofGTvNPDQyJzcaR+Vff/yc1oiDZM9eQI6G
CcVTTKjWmUOD0XzqDGXozOX8NKWPrC3N2is5Z+BMsYkb+WZbyLPcRq6Vvwpz
5aJ5mky2cNnIjdszBC8qnC0RnFnzdLo1j7QX8FB3Mff0bemWOHrXaC13jTcI
v20SPnPhvcEm/tBYRdd4+Vu/LhKcr+Gi7U4ubzlE855MyoOzOBV0jBN7cigM
KaAiuISGwHLadlRybWsld7zK6XY5S7dzEV1r87m1MpurSo+TZSm0CtZaRFPW
mwVQK1xWJzirmbGOSq1VlM+w54y8p+RpFoRNnkXiXDuuxKfy6e49te8b7eus
5PB8nm/4pFqrGR54L/JXnSmhqKdPqqpi6q7nX12O0R5yoxvfPpu24S97VN7L
bz15Tu/FKzQXnKYkLZ2K7FyuNTTxorePgbfvGFRqrwx8+DfhbOT9f6df8ejH
l+nlL7W5R3c5DPQKn4XGcsx4LtkaxpwW7Vsp2qTWwIIafXNqtc1o0bCkVcOa
Jk0bzs1cQbF4hFMmLpz4fzZzwnIrhXO2Um7qQ71wXbvg5eYMB3pEX/VNW8wT
wdhTrXk81plH/8wF9Br8zn2jpXRLXO42dhDd5sQjA0eea67iyURbOifacEn0
WZulB5edwrm4I4Xa0CwKd2eQtSONozuOcnLXCc4GFlO/8yyt28q5Klx226OM
LpdSutcLztbk0yk4uyU4u7EslRs2iVyeF0WjsS8Neq60Grpy0VB8rPyd05MX
UCC6NEXTnH0zTDnt7Mmj8iqGlXkG5Zx+eKeq/zms6gs9cr4/qefJBz+Jrxoa
rTKr1HhSshk/qnJ0xpYYUH0o6zjqSU51/uGnkdzXgZE5DBWeh9S518J5H548
40XPA5503eOlxJz3r/9gSMH94H+3DvL/Hx/DfK6NPPydTXt8f4/g4OcFiGE+
3O4RDR3OUSMLwZmRqk9wpXj26pnGqlGnZUzzNFPOawjHaSqedAlnRGcVCj4K
TN0oMPeiWLitwsSTWuGl83pOXNVZRafWch5o/k6fxKNH2pY8nmEpOLOiT38e
vYbWPDBawgPj5fQbr6ZvpmBOOKzzl8Xye6u5aerKpWU7aXPZT9POVMpDssjf
k0VWQCbHVH3BTlDmf5qGbSW0+ZRyzbOUW24ldG4spnvdKbod8uhecYxO23Tu
2iTTufgwHeKN24TLmnTX0yZe9oqhM3WiHwsmzaFQZz6Zv1kSP8uSWr9A3ra1
q/eaqczVgKpejrrm05iwIbgZUuo6DQ2oMKag7P0IxpQajGP3h6uGUktU+GhQ
hdmBL2s7yt5c1Z62gS97P1XBR66S4OrjuwHVGFRy/geGVE0y/z04+6Setxj+
apfp5yPG7nse/b/V1mBItQ4/0HSRRq/tZOiZkqthQMkUfc6JB6/W1qdGR09w
ZkCjYK1R05RaTQsq5JqU6C0V/byKMxL3Sk3cRfN4UiXxsk50fJOO0nPdng7R
/l3ai+gRbf1Ax0JipjkPZ5rTp2dBn4EljyQmPzZcyPNZtvRq23B1/DyuTRL9
ZuLF3aV7hMuiaHCPo8IviaI9R8kPyubE7hxO7sih2O8k53wLaPY+rapJcM2t
iI5Np7m7/hSdjrl0rc6i2z6d7qVJ9CxK4L71AbosQ7k+25vzM9dK/Bc/K164
TnMRxXL/lBgs5LjRXJJM59EUFMaHq5fl3LxWnblBhv6UHja2rsDwkLp+q1r5
flLV3XkrGHw7kqvzZbvb8EjdigGVzlIwOjQ4msc/mishR30QTCk5sAp3jV0H
+LyP89/hN8cW/vhm0XXsW/veOVKeePqG94UV1K9xJVPHmPyp+lRM1aNG4zcZ
2oIrbeq19cQLGFErz1dpm1KuPYdS3YWc1bOjXOJnlbErNYKxWv1N1Ikuq59u
z/npy7giuv+G9nxuida7q2vGvd9MeDDTRHBmqtrr8lTw9lKVW7+QXrnelycu
5JquE/d/D6Fn/SEuux+myj2e095HhL/SKQjMpkjiZcn2E1RuzadhyynaPE9x
1e0UNzeJHttwkrvrckSbHaV7VSo9dke4v+QgvaLL+uZG0GsZyF3TzbTrOUj8
X8J5rcU0Srys1LHirGD+mKEFaRbWtEXtY+DWNcGZeExVPBz8nI+jWkIcVoe3
r/diqnXXkNy7Si3Et0OfGM09/DZ9UXXfy7EDgrmBTwOq3pqfr5eCQ8HZx/cS
jz8MqPlrNEyNWUf6n8XZ2CSSb+829fseVWFfpWmO9rlQftDzhDepJ6hZuoas
aYYSM/Wo1hAOm6pDzRQNaqdp0KCjQ+1v+lTNNJKYOZuzOmaUzphL2UwbKvXX
CMZE5/yni3DZBmok5lVrLKNBYzGtovsvyTW8Jsd36JrQpWvMPd1ZqlzAJzJe
6MzmjY4pbySePtRayI3py7ktGq9/TTy9W7K44pNBpccRTnkKzramUbj9OGf9
8qj2OUHz5nwuup/ihks+dzacoMs5l26nbO4Jxu6vTuG+fQK9trH0LYri0bxQ
nljupt9iG/ckHl83WEW7zhIuzvidNvHVtfL3z8h9kKk7m2NzF9JxOIHhB3fk
lP5TNQOvzGyP7t/9vM/te/vM1cFRQp+6tqJ6aXv4T6kUo+ODcJ5SJ12pL/x5
RVC1Ti3xWNF/o3sH1MBUA3zkRf7ncaau/j38VTUttYoYReGnr37KmE2pwt2X
7tK39zCl5os5OnEGZybrUj11BvVTNGVoUK8hWNOazjldHc7q6nFGx0iGqXxt
RYW+eAKD1VSK1inXdRSeW0Ol9irhPXvRQLZc+G0hbTPmiKY3FV4z5q62Ed2a
esJderwUvL2dYcybabN4oSH8JvH1npEzDxaE8mhdGve8siUeHhU+S+GMVzpn
fLI4uzWb2i0nuLSlkLtbztC9SdFhx+lblcWzNcd5viaLF6vTeCYYe2QjHGYd
rNpHouDriZk3j8w86DVx5o5oy+s6i7gq3qR9uqXwrxll2iYcnzGLHMv53Ik/
CArO3r8Wmnr/Fc5G94N8Po9j17u/mdYY+9S3y9z/b3tXAhPVubb/pIlJE5Ob
xhgjkaCGHXSAO9whhGCIGBX0Fq1Lta1202oXa2ur1VZv1WqtetXWutZ9X+q+
152i4lKQTRAUkM2BocM/mcyEmbnnPP/7fd85M2cW1Nu/Qq7XLzkwA3POnHO+
57zv8y7f+7qXYsoud610bfkNr+GrsjoAZ6J7mI3HkfjdYGuMFZ6mxZl6rXxw
G5r+20j38JfruDN1HvbS87yxSxiOhfTB2Z4kv4LDcKknYaxXb5wK7YXjUeE4
GBOF/aRDD5AcOtI3HcfjsnBMR/ZA1BjsDR3FtyPRY3GOsJetfxU58UNxVUc4
i0lGIeGsPCoB90JjUN07CpY+ibD3SUJTiI5sTD0ekm3R2O9TPBy+HFVvbEDx
25twbcJGXJq8CRc/2YVLn+1D9id7kfv+HpR9cBBG4v3GN/egLms9TLRZR26A
bfR62EauRAthzJjxNWr7f4bqlA9QnTQRDwxv0zaettdRTtyyOGIQbvfqh9zg
JFwOMRAvSMH+6ERsS0pFwYL5QEkegcpI3MvmpzdblVvohbMA9coC2f6BSrME
SrXw2127fl1uf5xJnHvauDXtZPFKjjPhkw6IM/ZHlq9rpr80Eo84fg23xn+G
HSF6bH4pFCd7xpHOJN3ZIxSnuwfjWLcgHA4JJvwQznR9sLdPPPaSHNoTlYpd
kQOwLWIINpOO3NR7OLaEj8Cu6JE4oHuF8Pd3/KIbSFhLR35cP5QRL6smGVZL
suxhWAws0QmwRsTjYVAkanvEE0cbCWvGHJhHr0El4aXg1XW48cZ63HhvK/Kn
HUDh54eR/8E+5I8jG3LMFjSM2Q7ziC2wDF1H+62CPeN7+r2UtgWwDP4HzOkz
eM/COpJf1QljcT92OCpjs1ATPxzVupdxL3IgynunoYhwdr2HnvhkMg7SdW+N
1SN/5iwgj+xNK6s5K7Ky1HrXXvVf3XZhgE0LmDYwp6VcWry1UQLPa7Q/zpy8
45lN8dpwNiB71u9pr8UF5cRZXSuGM5ME04Fs5AyfjN09E7GrWyxO9E7AubB4
nA6JwJGgEBzoHoS9IT2wrWcI4SgUm6NisSlSj3WhBqwMScaKXmlYGT4Ea2JH
Yo1uJFYSz1pBcmJVsAG7Q5NwUdcPxYn9aa7ZmiADTKR3zZFxMIf2RWNIFOp6
RKCmlx6N+tGwZM7B7yNWoXL4apQMW4XCkWtQOn4zqibvw4PJ+4l3bUfZELIf
B3yPuvQfYMlYg9bMNbAPWA5zv/l4mDILDSnTYEydChPpyKbU99CYPA4N8SNQ
E5mBB+EDUR+dgQa2Ec5Yfa760DSU90pGQVgyTgX3xV66tpJp04HrV+g+seoD
omehWmPFr6as9mHWgsZXYbaBOSnA7gHKpfnhrb3tTWFzC6Q5IKp7Cx+HP0dz
cwpWL9lCW5UF1av342TaGPwcnoKDhItDhLNjYXE4Ea7DodBI7O9N2ArugRVd
u2BFjyBsiI3DFkMaNidlYF3yMKxLex2bM9/HzlemYeuwj7GK3n8Xm46FQXFY
3aMPjkcaUPjXfqiNT4GR+FkzHdtCODb1jCF9SRgjPlgdkYQa/Qg8TCcelbmY
7MNlqMhYgXtDfkBN1ho0jdoI04iNMGauRl3aMsLTEjSnLoWFXlv6s1yPeXiQ
NAPlPIY1ARVkAzMdWWd4DcbE0SQrh6E5OhNNpCsbwwegiTiZmTZ71CDYGN7C
08gOScW1ngk4Rfq94sNPgQsXgGYmz4TXjKlEbd8bvzrZ7sCyLHz8bcm3wC5O
L30aqIyZ99b+/jOBM4fSLbTVB2cuJaYpKbmSsid2YqLPXy7EjY/mYmME6cDQ
ZBztm4b9EQb8THj4OSYBO8KjsSY4BMu6dcMKwto2vR7nRo1F3rSvULRoDW6v
2oOCrSdRvO8SSg/moGTXOdz6fifOTJ2Ln8iuWB4Six3B0bhGvKeSZFkNq1VE
erKZsGUMiUEdYa02Qo+qvqmoiM/CveTJqEz7CtX9F6A2/TvC3RI0pROe0pcT
pmgjbJmTF8GctBCm5G9Qrf8SxbqpuB33IW7pJ+MG2RHX9W/gFvH8grjhuKMb
ikqyRR7GZJJdO5h09SC0RA0g2yMNFpJj9rD+sIf2J9maigayRfKD43GR7JK7
49+D88BhoKYWas9y3/VG2vXh3vElSfHpIzDWHiHbtGHqtjAnuhm2v//MBbHe
3Q7RF4p7rFkOMPPJyOK96IQnIpuibgx47oF590mcyXoHS7vFYFV3HbZHJBPm
9PgpKh7rY+KwNroPVsfEYHNqCk6+OQ75c+fCuGkrJFYPp6QGqCMN8js8D7qZ
ychmWC7ewLU5C7ElJR0bSP+e7BWNQlaPjXRkZddQNPSIQkNIX9SSXKuJTeG1
Fkrj/44yw1u4l/IJHqTOIptgDuFqLqwp82AnTNmTvoHNMB8tLIcocTaqDKxm
50wUpM1E3uAvcDNzOq4PmYqrgyYhJ/V15OizcDV2EPKj0lERmU76kvDVZzCs
8ZlkgwxAS3g/WAlf1p4paCIdXxOciN/oPlwM1qFw6FhYf9oGlFcK36nL6fZD
amvhaT2WXtqD13eVhS/CIT8eZwEUoz/eZDfGXB2QTytoqKzYxspaKLV+hyRi
BJLaKYqtf3aKGnDS/Xo8WLsTRzJewz/p3i7qEo4lQdFY2DMKCyNisUxvwOZB
g3Fmwru4s2IZmi+dh728FHJltegryfidSla0ziH2u9GMptNnkT11Grbrk7An
JBRXe8egmPjYPZJnNcGxqCE7szJUz2utlerSUZpI8ixlPKpS30dtyhQ0J39C
+JoOV9JMSImz4Ej4gjAyA02GmbzOdWn6l6ibsBqWBYdhXnoQtYt2oGLuOrIX
FuPGOzNwZdhE5KSNwnXDUBTGZeAu2SQ18YPRnPQyzImDYIrtBwvpSgvJsUay
d6uC4nGrSyQuBMXgVtrLaPrnakgl95TcVoEin1J3PjgTTzR/zmUlnuRSN0lx
jMGDMV+l2BbhV9Z1SArCxCw7OwhnGj8/97XInpwVSe1EZhW52qy+Gj2fjtt3
cOmLeVifNAg/kkxZEZGIeSHRmE6YWEAY2z1xIm6uX4eG82fhKiumG9sivoHX
n3EJv4hV3eDBGj8puhfGh6g9fADHXx9LNmg02RbRuB1G2ApPwAPigBXBcSgm
PVUQloSiviRzkoejpt841KW8hXqSa+bECXAYPoSsn4LWvu/DFP4u6mImoiF1
Ooyvfgfj9C2wbyWufoXk6m+1cN66B+u1IpjO56L+4C+oWb8XVV9/j8oJhMnM
t5BvyEQeyc2SuDTCdQruRxvQSNdtiUklrpaMWrKDbpM8yw6KRS7dk5q5S+Es
LPfgTBJeLbffC74+CQlOJb/Pm4wpr2XJm2QFImEBc7uEjBSrRNTf7Z9/prVV
JPUP3JcjKTK/lecTOGXFv+ZsgbPZiOqDR7A+azTmkC3/fVwqNqQMwtr+mVg1
bCQOfP45yo4ehtNYD96f1GoWa6dZfTaHXdQvZ75p34fa7WAUqLdX3UHe0vk4
OjANJ3U6XO8bjwpdEu6Fk20Q1Be5XYi7BelREJ2OyqThqE8ZjQYD2QNkH7Yk
jIVdPx423Xg0hI1GWa9XiOO/jcY3FsK5/AhwmrBf2sx9M7Ao+YSsfq+VTshM
51lFHP5qIZw7j6Jx3g8oe+9z3BwyBr/qU3EpQoebhPl7sWT/0rX/3qcf2Z/J
KOkZjyskZy/qUlHy8SzYc26KXDEeZxS5PFq7ypujuyA6ZrblmXVH+9omYAFl
m69BK47f3jjT+i28gpl2BWekJ10uKxyS4s12NqPmejaOzPoS85P74bPgSCyk
Z3tD+t9x7os5qDh2HA+Li+AwNcC9nqDVTLTOzI8j8d64Lq8GQEwd83CwJHSH
25NprYPx5G7kfPAmDicn4ixhLU9HciNMj2tMR3UOx6/d9CiMHECc/mU06Imz
k35r7DMQLbohtGWhPmYoSsIziOu/gnsjpsG6YjdwrYx0t5XnLTD7TkyZpOgr
hYczzJH+RlkVnFfyYD19CQ2r1uHWG+NwwWBAji4Ot3V64oZJeMB8e9HJKCYb
ILtXHA6HxiF71Juw7iM81xjFsXz9r9rYtqzkMiiSTlZ4itpNVfTp1eBM3e9R
BqZ6XD8vm/iO9saZCi1J+8YHZ5LLAqfLDJVd3Dy4C//IyMBHkX0xW2fAT5kj
cOGLr1H/y0VRj40fy8H9cKwfrsPRAjthzK7k8PG4m5ao2AUVdEjC28SsEpeT
DARLFRylOSha9jX29k/GnshwnCb9eZ7sgDOde+F05zBcCTKghOGs72AYSX+a
SI810dYY0w810aTjaMtLGITSEZPQ/M8NcObmi/Vnkujtzbw5zENto/NleRCy
U+nTy+pF2JTaERYr3yTil8b9O1E+axqKRg3DjeQUshXicTMyAcXRSSiOSUZO
eCL20PmdShsCy6rNHKfc3+hFTuDBiZr358aBnWPMwa1/h/JKdCEX3Td994c/
3tw48/WudSzO3FHzNnDGaobIkvD62M112Ld8Cd5NNOBD4ugbx03Ebz9ugOVa
HmBqEfu0Kj2WZYcSb/D0nlXzRN0xNw0d8cQe6P7ajHC1kM1gvIt7O9Zhf0Y6
NoeG0hz2woEuPbHvxe440rkn6alEFLM+B9GsxwFxJZIrvxNvqqOtONLA66QU
DnsdxiUr4bpyA2huAqutKnHPtA1mOiuziIRA9ANU1tyw62D5Dmo+LMce3YPm
OrhyL8G8ZjlKPpiMXzOG4PLfUkmnp6CQbINb0ak4EZKAi0kZMM9dBvlGoahh
wnm9U5l7ZVMxRg+ZLHsCT2pmvEeiCanmUixSr8nTGpa+edF+OOs4vamervuF
WgfXoSSvMD7F12VJMJuMOLZzOz4eORpvp6Zh5eSPcXvfUdhYDrxVyXXiPF/J
hZKVHD6WL8WfSI8GEPlr8CIrKsz5Z5w086wujtlIvPxn/DJ6LHZG6bA9qDe2
demBjZ1ewq7OXXGBbI98FvuMMKCW9Gkz/TYTZ6o39CeMGXA+pR8qvp4Hx3XW
b+QhRP1eG5dkrBKnhUd2Ze9egNxPyGwWl7gHPAdU2ES8DnCLEXJFCSxkQ1et
Wo28t97HlaRM3kemIDIdRdGDUWzIwv3XP4b50Ekl35GwTdxDeMRtiudWPGT/
Yn156Vm2uWxwuf1Iald7wdwkqL2EHzGJfj6OQAAUN70jcCbOSBY1KFkOMOPp
at4551KtBDUbrl+4hBkTJuPtwUPx4/TZyDt8GvY6k+f01fWp7tocEv7F7Agn
cQ4vv6+mBoNq8DoFndDGSvhPiwXGgydwccw72BYWj7VdgrH6L13x44udseUv
L+GX0DDkxcahNFKHqlAdmghzv+vTcC8pDVeTUnB97BiY9u0Cmmrpe0j3y6Jy
oYPPuAtq3a+Avnn3nCkX6LITTFsIbhYRm2N9y8vvonHrXpS/MxNFhpFk/w5E
adhg3InJQF6/Uaj9fi1QX0mfZ7kbJi5BLUqVWZdyLi6Z3hF+LS67u++zptPq
UxkdhTPWf9vBc4IdwlfD9ZrkjjNVF5djJ92z6W9Nwqo5C3A3+wYctSahXzl1
V7izuo97+BNWSdWdgJdjRZZ8cQbOj2p/PoEjWa9jRbcwfNPpL/i204tY9uKL
2NG9Gy7FRKMwPh53Y+JQHZ6ARl0KahJSkUuy7MbgITAuWgDX1Yuk00kH28mG
JJniUqJsVgVn7vwJ7SnD/w9MwtiJR9jIbna4lLwW4nDSnUo4t51C84R5KNaP
wtUeqbjcIxmX9Zko/fwrWH89R5+rAcsMchDObPTbJpt5TUYXW9vPVwU4FNxr
8mKe4ugovelwOjjOJLWfNZMtzMYn3Mg2J/IvXsWmRcux8dtluHU2G7LFoaav
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
Hr44ez6ej+fj+fhPH/8Hp71Pvw==
     "], {{0, 159}, {154, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{20., Automatic},
   ImageSizeRaw->{154, 159},
   PlotRange->{{0, 154}, {0, 159}}]], "Input"],
 "Technology Guidelines\nDouble Click on the ",
 StyleBox["]]",
  FontFamily->"Agency FB",
  FontSize->22,
  FontWeight->"Plain",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[0, 1, 1]],
 StyleBox[" ",
  FontFamily->"Arial Narrow",
  FontSlant->"Italic"],
 "Brackets on the Right to Open"
}], "Section",
 CellChangeTimes->{{3.500124384801197*^9, 3.500124520622591*^9}, {
   3.5001254430341024`*^9, 3.5001254503222957`*^9}, 3.5001266852274604`*^9, {
   3.50012699777721*^9, 3.500127050161004*^9}, {3.500128998793241*^9, 
   3.5001290011271667`*^9}, 3.5001325018490343`*^9, {3.5001325405946493`*^9, 
   3.500132551502228*^9}, 3.5001326326593847`*^9, {3.5001329189772887`*^9, 
   3.5001329292892447`*^9}, 3.5001331908545127`*^9, {3.500133674417841*^9, 
   3.5001336955878696`*^9}, {3.500295516688263*^9, 3.500295516846272*^9}, {
   3.5002972075012064`*^9, 3.5002972077412066`*^9}}],

Cell[TextData[{
 StyleBox["NOTE:  If you have just finished an Exercise set, ",
  CellFrame->True,
  Background->None],
 StyleBox["Quit Kernel",
  CellFrame->True,
  FontSlant->"Italic",
  Background->None],
 StyleBox[" under the ",
  CellFrame->True,
  Background->None],
 StyleBox["Evaluation ",
  CellFrame->True,
  FontSlant->"Italic",
  Background->None],
 StyleBox["pull-down menu before executing a new Exercise set. This will \
clear ALL assigned variables. You can also use the Clear[...] command to \
specify individual variables to be cleared.\n\nTO OPEN CELLS, put your cursor \
on the right cell bracket with the small triangle at the bottom and double \
click. To open ",
  CellFrame->True,
  Background->None],
 StyleBox["all",
  CellFrame->True,
  FontWeight->"Bold",
  Background->None],
 StyleBox[" ",
  CellFrame->True,
  Background->None],
 StyleBox["cells",
  CellFrame->True,
  FontWeight->"Bold",
  Background->None],
 StyleBox[", highlight the bracket on the far right and select ",
  CellFrame->True,
  Background->None],
 StyleBox["Grouping",
  CellFrame->True,
  FontSlant->"Italic",
  Background->None],
 StyleBox[" under the ",
  CellFrame->True,
  Background->None],
 StyleBox["Cell",
  CellFrame->True,
  FontSlant->"Italic",
  Background->None],
 StyleBox[" pull-down menu and select ",
  CellFrame->True,
  Background->None],
 StyleBox["Open All Subgroups.\n\n",
  CellFrame->True,
  FontSlant->"Italic",
  Background->None],
 "TO STOP AN EXECUTION\nSelect the ",
 StyleBox["Evaluation",
  FontSlant->"Italic"],
 " pull-down menu and click on ",
 StyleBox["Abort Evaluation.",
  FontSlant->"Italic"],
 " The kernel will start up again immediately upon your next execution.",
 StyleBox["\n\n",
  FontSlant->"Italic"],
 "ORDER OF EXECUTION\nExecute cells in a given order. For example, if you \
have not first assigned a name, say A, to a current matrix, the command \
Inverse[A] will not produce the desired results.\n\nSAVING NOTEBOOKS\nYou can \
save anytime to any directory you choose, and it is wise to save often. \
However, before you do your final save to reduce the size of your file, \
especially if your output includes graphics, it is a good idea to delete all \
your output by selecting the ",
 StyleBox["Delete All Output",
  FontSlant->"Italic"],
 " selection under the ",
 StyleBox["Cell",
  FontSlant->"Italic"],
 " pull-down menu.\n\nTO PRINT YOUR RESULTS\nIf you want to print your entire \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook or selected portions of it, first select the bracket on the far \
right, then select the ",
 StyleBox["Format",
  FontSlant->"Italic"],
 " pull-down menu and select ",
 StyleBox["Word Wrapping - Wrap at Paper Width. ",
  FontSlant->"Italic"],
 "If you want to print only selected cells, highlight the sections you want \
printed while holding down the ",
 StyleBox["Ctrl",
  FontWeight->"Bold"],
 " key, then select",
 StyleBox[" Print Selection ",
  FontSlant->"Italic"],
 "from the ",
 StyleBox["File",
  FontSlant->"Italic"],
 " pull-down menu. \nIf you want to print your answers, in a Word or text \
document:\n\t\nFirst set up the Word or text document in an appropriate form.\
\n\t\nSecond, highlight the cell or cell contents that you want to copy.\n\t\n\
Third, select the ",
 StyleBox["Copy As",
  FontSlant->"Italic"],
 " option under the",
 StyleBox[" Edit ",
  FontSlant->"Italic"],
 "pull-down menu and\nselect Plain text if you will want to edit it or Bitmap \
or Metafile if you want a picture..\n\t\nFourth, return to your Word document \
and select Paste or Paste Special.\n\t\nContinue doing this for all cells you \
wish to copy.\n\nEXPERIENCING MAJOR PROBLEMS\nSave if appropriate, then shut \
down ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and start it up again. Sometimes, it also helps to shut down your computer \
and start it up again."
}], "Text",
 CellChangeTimes->{{3.500124532026198*^9, 3.500124537144267*^9}, 
   3.500124662169976*^9, {3.50012471531643*^9, 3.5001248898440075`*^9}, {
   3.5001249252369003`*^9, 3.5001251319722214`*^9}, {3.5001251684441843`*^9, 
   3.500125262574254*^9}, {3.5001253121162663`*^9, 3.5001253826350527`*^9}, {
   3.5001255170322723`*^9, 3.5001262405911894`*^9}, {3.5001262940166616`*^9, 
   3.500126461621249*^9}, {3.5001265087673826`*^9, 3.5001265577912207`*^9}, 
   3.5001265910083857`*^9, {3.500134609578227*^9, 3.5001346125581865`*^9}, 
   3.5001346595543118`*^9, {3.500297100914074*^9, 3.500297159522873*^9}, {
   3.5015982216273837`*^9, 3.501598296103821*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Purpose, Prerequisite Reading, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Functions, Palette Needed"
}], "Section",
 CellChangeTimes->{{3.504626031465253*^9, 3.504626082024145*^9}, {
  3.5046269451215115`*^9, 3.5046269659117002`*^9}}],

Cell[TextData[{
 StyleBox["Purpose:",
  FontWeight->"Bold"],
 "   ",
 StyleBox["To understand the LU factorization algorithm for square matrices \
and to solve systems of equations using the LU factorization of a matrix.\n\n",
  FontWeight->"Plain"],
 StyleBox["Prerequisite Reading:  ",
  FontWeight->"Bold"],
 StyleBox["The Method of LU Decomposition, Section 7.2",
  FontSlant->"Italic"],
 StyleBox["\n",
  FontWeight->"Plain"],
 "\n",
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" Functions:",
  FontWeight->"Bold"],
 "\n\t",
 StyleBox["Assignment\t\t\tto give a name to a quantity, such as a matrix\n\t\
[[ ]]\t\t\t\tdouble bracket command to pull out part of a list\n\t\
IdentityMatrix[n]\t\t\tto generate the n",
  FontWeight->"Plain"],
 "\[Times]",
 StyleBox["n identity matrix\n\tInverse[A]\t\t\tto compute the inverse of the \
matrix A, if it exists\n\tLUDecomposition\t\tto generate information to get \
LU factorization\n\tMatrixForm\t\t\tto view a matrix in matrix form, instead \
of as a list of lists\n\tSparseArray\t\t\tto assign values to particular \
postions in an array\n\tTranspose\t\t\tto compute the transpose of a matrix\n\
\t\n",
  FontWeight->"Plain"],
 StyleBox["Palette Needed: ",
  FontWeight->"Bold"],
 " In preparation for this notebook and others as well, select the pull-down \
menu item, Palette. Then select Other and choose Basic Math Input. This \
palette will appear in the upper right corner of your screen. "
}], "Text",
 CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
 CellChangeTimes->{{3.5046260950338893`*^9, 3.504626096375966*^9}, {
   3.5046266506696696`*^9, 3.504626652567778*^9}, {3.504626758684848*^9, 
   3.5046267927267947`*^9}, {3.5046268285608444`*^9, 3.504626919826064*^9}, {
   3.5046326362680264`*^9, 3.5046329198702474`*^9}, {3.504721300140567*^9, 
   3.504721331242346*^9}, {3.504723517306381*^9, 3.5047235233237257`*^9}, {
   3.5047256643201838`*^9, 3.504725888125984*^9}, {3.5047259267171917`*^9, 
   3.5047259959431515`*^9}, 3.504726306392908*^9, {3.50472656483569*^9, 
   3.504726598875637*^9}, {3.504730256331832*^9, 3.504730375325638*^9}, {
   3.5047312462674527`*^9, 3.504731257502095*^9}, 3.5047313011495914`*^9, {
   3.5047470127252426`*^9, 3.5047470533285646`*^9}, {3.504747086848482*^9, 
   3.504747129585926*^9}, {3.5047471746035013`*^9, 3.504747329242346*^9}, {
   3.504747704754824*^9, 3.5047477329764385`*^9}, {3.5047481092659607`*^9, 
   3.5047481464660883`*^9}, {3.5048158493690233`*^9, 
   3.5048159373450556`*^9}, {3.50487510950668*^9, 3.5048751893572474`*^9}, {
   3.6248329011965218`*^9, 3.6248329470342827`*^9}},
 TextAlignment->Left,
 FontFamily->"Arial",
 FontSize->12]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["LU Factorization (8 exercises)",
 FontFamily->"Arial"]], "Section",
 CellChangeTimes->{{3.504730974996937*^9, 3.5047309821663465`*^9}, 
   3.5047480410480595`*^9, {3.5047499228245697`*^9, 3.5047499307370224`*^9}, 
   3.5048274064270496`*^9, 3.5051673370389795`*^9}],

Cell[CellGroupData[{

Cell["Introduction", "Subsection",
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 StyleBox["Mathematica",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" has a built-in command to find the LUDecomposition of a matrix, \
but we will begin by exploring the purpose behind such a factorization and \
explore the algorithm first.",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.504474856995132*^9, {3.5044780825648603`*^9, 3.5044782373965826`*^9}, {
   3.5044783192166595`*^9, 3.50447846550826*^9}, {3.5044785378768063`*^9, 
   3.504478594691917*^9}, {3.504731337221655*^9, 3.5047313389467535`*^9}, 
   3.504748171560524*^9, {3.504816632684827*^9, 3.5048167074971056`*^9}, {
   3.504818610664961*^9, 3.504818635677391*^9}},
 TextAlignment->Left,
 FontFamily->"Arial"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Why We Do LU Factorization", "Subsection",
 CellChangeTimes->{
  3.5047481885484953`*^9, {3.5048178601640344`*^9, 3.504817874280842*^9}, {
   3.5048180186540995`*^9, 3.5048180208172235`*^9}, 3.5048180952304797`*^9},
 TextAlignment->Left,
 TextJustification->1,
 FontFamily->"Arial",
 FontSize->14],

Cell["\<\
To solve the equation Ax = b using LU factorization you follow a two-stage \
process. It requires row reduction of the matrix   [ L  b]  with solution \
vector y, followed by row reduction of the matrix  [ U  y ]., If we are given \
the LU factorization for a matrix A and the vector b, we can execute the \
following commands. 

Suppose that we are given a matrix along with its lower and upper triangular \
matrix decompositions. After defining the matrices A, L, U, and b, the \
following set of commands will first create then append the b column to the L \
matrix and then row reduce that augmented matrix.\
\>", "Text",
 CellChangeTimes->{{3.5047313750128164`*^9, 3.504731376511902*^9}, {
   3.504741521859183*^9, 3.5047415344999056`*^9}, 3.5047482299498634`*^9, 
   3.504816810975024*^9, {3.504816851575347*^9, 3.5048169265396347`*^9}, {
   3.5048169920163794`*^9, 3.504817056635075*^9}, {3.5048170870258136`*^9, 
   3.504817102492698*^9}, {3.5048171492133703`*^9, 3.5048171854694443`*^9}, 
   3.624832146442069*^9},
 TextAlignment->Left,
 FontFamily->"Arial"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7", ",", "5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", 
        RowBox[{"-", "5"}], ",", "1"}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "5"}], ",", "7"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lb", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "L", "]"}], ",", "b"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"soly", "=", 
   RowBox[{"RowReduce", "[", "Lb", "]"}]}], "]"}]}], "Input",
 CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
 CellSize->{131, Inherited},
 CellChangeTimes->{
  3.5048168444049363`*^9, {3.5048169432405896`*^9, 3.5048169542202177`*^9}, {
   3.5048172070246773`*^9, 3.5048172080527363`*^9}, 3.5048180664008303`*^9},
 TextAlignment->Left,
 TextJustification->1],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", 
      RowBox[{"-", "5"}]},
     {"0", "0", "1", 
      RowBox[{"-", "18"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626691701954714*^9}]
}, Open  ]],

Cell[TextData[{
 "We can read the solution vector for the system Ly=b. The following command \
will pull out that solution vector, yvec. The ",
 StyleBox["Transpose[soly][[-1]]  ",
  FontWeight->"Bold"],
 "pulls out the last column of the soly matrix above. Then we will append it \
to the U matrix and row reduce the resulting augmented matrix."
}], "Text",
 CellChangeTimes->{
  3.5047482628707466`*^9, {3.504817228996934*^9, 3.5048173719191084`*^9}, {
   3.5048174796602707`*^9, 3.504817674266402*^9}},
 TextAlignment->Left,
 FontFamily->"Arial"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yvec", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "soly", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uy", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "U", "]"}], ",", "yvec"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"solx", "=", 
   RowBox[{"RowReduce", "[", "Uy", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.504818068030924*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "5"}], ",", 
   RowBox[{"-", "18"}]}], "}"}]], "Output",
 CellChangeTimes->{3.626691702244398*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", 
      RowBox[{"-", "5"}]},
     {"0", "1", "0", "1"},
     {"0", "0", "1", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626691702252182*^9}]
}, Open  ]],

Cell[TextData[{
 "Now we can read the solution to the system Lx=y, so the solution to our \
system of equations is {-5, 1, 3}.\n\n",
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command LinearSolve uses the LU factorization technique and you may check \
your answer to the above by applying this command to the original matrix, A. \
We had better get the same answer."
}], "Text",
 CellChangeTimes->{
  3.5047483025740175`*^9, {3.504817392094262*^9, 3.504817418941798*^9}, {
   3.504817453035748*^9, 3.5048174570339766`*^9}, {3.5048177029720435`*^9, 
   3.504817729375554*^9}, {3.5048177669227014`*^9, 3.5048178005616255`*^9}},
 FontFamily->"Arial"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearSolve", "[", 
   RowBox[{"A", ",", "b"}], "]"}], "  "}]], "Input",
 CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
 CellSize->{79, Inherited},
 CellChangeTimes->{
  3.5048177891449723`*^9, {3.504818070614072*^9, 3.5048180734782352`*^9}},
 TextAlignment->Left,
 TextJustification->1],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.62669170236388*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The LU Factorization Algorithm", "Subsection",
 CellChangeTimes->{{3.504818512462344*^9, 3.5048185390848665`*^9}}],

Cell[TextData[{
 "We can use elementary row operations using the leading entry in row ",
 StyleBox["r",
  FontSlant->"Italic"],
 " of ",
 StyleBox["A",
  FontSlant->"Italic"],
 " as a pivot, and then using row replacements to create zeros in the pivot \
column below this pivot entry. For example, suppose you want to find the LU \
factorization of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"2", "3", "0", "1"},
      {"4", "5", "2", "2"},
      {"6", "9", 
       RowBox[{"-", "3"}], "4"},
      {"0", "2", 
       RowBox[{"-", "1"}], "5"}
     }], ")"}], TraditionalForm]]],
 ".  With some matrices you musy rearrange the rows and we will discuss this \
in a later section. We will use elementary matrices to reduce the matrix A to \
an upper triangular matrix. To begin, we replace rows 2, 3, and 4 by linear \
combinations with row 1 so that column 1 becomes 2 followed by three zeros"
}], "Text",
 CellChangeTimes->{{3.5048186728035145`*^9, 3.504818689991498*^9}, {
  3.504818722844377*^9, 3.5048188188028655`*^9}, {3.5048190342171865`*^9, 
  3.5048190671620708`*^9}, {3.5048191039061728`*^9, 3.504819164759653*^9}, {
  3.504822674658408*^9, 3.504822681473798*^9}, {3.5048229122859993`*^9, 
  3.504823125803212*^9}, {3.504825597197568*^9, 3.504825666022504*^9}, {
  3.504825752077426*^9, 3.5048257871244307`*^9}, {3.5048258537202396`*^9, 
  3.5048258928974805`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", GridBox[{
      {"2", "3", "0", "1"},
      {"4", "5", "2", "2"},
      {"6", "9", 
       RowBox[{"-", "3"}], "4"},
      {"0", "2", 
       RowBox[{"-", "1"}], "5"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0"},
      {
       RowBox[{"-", "2"}], "1", "0", "0"},
      {
       RowBox[{"-", "3"}], "0", "1", "0"},
      {"0", "0", "0", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"A1", "=", " ", 
    RowBox[{"E1", ".", "A"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.504825119194227*^9, 3.504825130919898*^9}, {
   3.5048251999948487`*^9, 3.504825229310526*^9}, 3.5048274112843275`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"0", 
      RowBox[{"-", "1"}], "2", "0"},
     {"0", "0", 
      RowBox[{"-", "3"}], "1"},
     {"0", "2", 
      RowBox[{"-", "1"}], "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626687547580357*^9, 3.62669170240506*^9}]
}, Open  ]],

Cell["\<\
Our next steps would have been attempts to get columns 2 and 3 with zeros in \
the lower triangle. We will take care of the second column and then the third.\
\>", "Text",
 CellChangeTimes->{{3.504819513431596*^9, 3.504819596459345*^9}, {
  3.5048233268047085`*^9, 3.5048234161898212`*^9}, {3.5048259120755777`*^9, 
  3.504825947852624*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"E2", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "2", "0", "1"}
      }], "\[NoBreak]", ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A2", "=", " ", 
   RowBox[{"E2", ".", "A1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.504825119194227*^9, 3.504825130919898*^9}, {
   3.5048251999948487`*^9, 3.5048253603330193`*^9}, 3.5048274121963797`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"0", 
      RowBox[{"-", "1"}], "2", "0"},
     {"0", "0", 
      RowBox[{"-", "3"}], "1"},
     {"0", "0", "3", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266875711418333`*^9, 3.6266917024574614`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"E3", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "1", "1"}
      }], "\[NoBreak]", ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A3", "=", " ", 
   RowBox[{"E3", ".", "A2"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.504825119194227*^9, 3.504825130919898*^9}, {
   3.5048251999948487`*^9, 3.504825448790079*^9}, 3.5048274142384963`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"0", 
      RowBox[{"-", "1"}], "2", "0"},
     {"0", "0", 
      RowBox[{"-", "3"}], "1"},
     {"0", "0", "0", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626687600776411*^9, 3.626691702507265*^9}]
}, Open  ]],

Cell["\<\
Now, we have our upper triangular matrix, so we will call this last matrix \
Umat. Following the guidelines in your text, the lower triangular matrix \
should be the inverse of the product of the three elementary matrices we used \
above.\
\>", "Text",
 CellChangeTimes->{{3.504825987983919*^9, 3.504826081077244*^9}, {
  3.624832284453311*^9, 3.624832287805149*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Umat", "=", "A3"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Lmat", "=", 
   RowBox[{"Inverse", "[", 
    RowBox[{"E3", ".", "E2", ".", "E1"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.504825473600498*^9, 3.5048255488158007`*^9}, {
   3.5048260887456827`*^9, 3.504826110538929*^9}, 3.5048274150785446`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"2", "1", "0", "0"},
     {"3", "0", "1", "0"},
     {"0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "1"}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626687644139866*^9, 3.626691702559092*^9}]
}, Open  ]],

Cell["\<\
This is a lower triangular matrix. Let us check and see if Lmat.Umat is equal \
to our original matrix A.\
\>", "Text",
 CellChangeTimes->{{3.504826119542444*^9, 3.504826205610367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Lmat", ".", "Umat"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.5048220741490607`*^9, 3.5048221252669845`*^9}, {
   3.504822300703019*^9, 3.504822308012437*^9}, {3.5048261747226*^9, 
   3.5048261752716317`*^9}, 3.5048274160506*^9, 3.626687796157724*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"4", "5", "2", "2"},
     {"6", "9", 
      RowBox[{"-", "3"}], "4"},
     {"0", "2", 
      RowBox[{"-", "1"}], "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266876684225187`*^9, 3.626691702608547*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"4", "5", "2", "2"},
     {"6", "9", 
      RowBox[{"-", "3"}], "4"},
     {"0", "2", 
      RowBox[{"-", "1"}], "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266876684225187`*^9, 3.626691702617793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 1", "Subsubsection",
 CellChangeTimes->{
  3.5047485110869436`*^9, 3.5048262696120276`*^9, {3.5048263052190638`*^9, 
   3.5048263301694913`*^9}},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Use the factorization found above to find a solution to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"2", "3", "0", "1"},
      {"4", "5", "2", "2"},
      {"6", "9", 
       RowBox[{"-", "3"}], "4"},
      {"0", "2", 
       RowBox[{"-", "1"}], "5"}
     }], ")"}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["x", "1"]},
       {
        SubscriptBox["x", "2"]},
       {
        SubscriptBox["x", "3"]},
       {
        SubscriptBox["x", "4"]}
      }], ")"}], "=", 
    RowBox[{"(", GridBox[{
       {"2"},
       {"1"},
       {"7"},
       {"5"}
      }], ")"}]}], TraditionalForm]]],
 ".  Verify your answer by computing the product of A and the solution."
}], "Text",
 CellChangeTimes->{{3.504475581208192*^9, 3.5044756064490356`*^9}, 
   3.5044759282096753`*^9, {3.5044760318534565`*^9, 3.5044761436276517`*^9}, {
   3.5044768349397984`*^9, 3.5044768482154217`*^9}, 3.504748470753637*^9, 
   3.504748565638064*^9, {3.5048262472027454`*^9, 3.5048262585163927`*^9}, {
   3.5048263437982707`*^9, 3.504826383611548*^9}, {3.504826459014861*^9, 
   3.504826459014861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"L", " ", "=", " ", "Lmat"}], "\[IndentingNewLine]", 
 RowBox[{"U", " ", "=", " ", "Umat"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "L", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "U", "]"}]}], "Input",
 CellChangeTimes->{{3.62668771853353*^9, 3.626687747236878*^9}, {
  3.626687898966308*^9, 3.626687910959632*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.626687857899911*^9, 3.6266879180632753`*^9, 
  3.626691702675247*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.626687857899911*^9, 3.6266879180632753`*^9, 
  3.626691702682618*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"2", "1", "0", "0"},
     {"3", "0", "1", "0"},
     {"0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "1"}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626687857899911*^9, 3.6266879180632753`*^9, 
  3.6266917026878767`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"0", 
      RowBox[{"-", "1"}], "2", "0"},
     {"0", "0", 
      RowBox[{"-", "3"}], "1"},
     {"0", "0", "0", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626687857899911*^9, 3.6266879180632753`*^9, 
  3.626691702694816*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "1", ",", " ", "7", ",", " ", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lb", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "L", "]"}], ",", "b"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"soly", "=", 
   RowBox[{"RowReduce", "[", "Lb", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.62668780996598*^9, 3.626687835345811*^9}, {
   3.626687876192973*^9, 3.6266878878906813`*^9}, 3.626687986074321*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "2"},
     {"0", "1", "0", "0", 
      RowBox[{"-", "3"}]},
     {"0", "0", "1", "0", "1"},
     {"0", "0", "0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626687930411628*^9, 3.6266879880182*^9, 
  3.626691702741848*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yvec", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "soly", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uy", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "U", "]"}], ",", "yvec"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"solx", "=", 
   RowBox[{"RowReduce", "[", "Uy", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.626687850503949*^9, 3.626687853764018*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   RowBox[{"-", "3"}], ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6266879702890177`*^9, 3.6266880162236977`*^9, 
  3.626689348607399*^9, 3.626691702791667*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["5", "2"]}]},
     {"0", "1", "0", "0", 
      FractionBox["7", "3"]},
     {"0", "0", "1", "0", 
      RowBox[{"-", 
       FractionBox["1", "3"]}]},
     {"0", "0", "0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266879702890177`*^9, 3.6266880162236977`*^9, 
  3.626689348607399*^9, 3.626691702800826*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xvec", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "solx", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.626688022023447*^9, 3.626688077800971*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   FractionBox["7", "3"], ",", 
   RowBox[{"-", 
    FractionBox["1", "3"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.626688042900736*^9, 3.626688078807907*^9}, 
   3.626691702859432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", ".", "xvec"}]], "Input",
 CellChangeTimes->{{3.626688082083763*^9, 3.626688083491785*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1", ",", "7", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.626688104961789*^9, 3.626691702927781*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 2", "Subsubsection",
 CellChangeTimes->{3.5048263160346828`*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Follow the steps abpve to obtain ",
 StyleBox["U",
  FontSlant->"Italic"],
 ", review your work to find the entries in ",
 StyleBox["L",
  FontSlant->"Italic"],
 ".  Then compute the product of ",
 StyleBox["L",
  FontSlant->"Italic"],
 " and ",
 StyleBox["U",
  FontSlant->"Italic"],
 " to verify your work."
}], "Text",
 CellChangeTimes->{{3.504475581208192*^9, 3.5044756064490356`*^9}, 
   3.5044759282096753`*^9, {3.5044760318534565`*^9, 3.5044761436276517`*^9}, {
   3.5044768349397984`*^9, 3.5044768482154217`*^9}, 3.504748470753637*^9, {
   3.504826415174353*^9, 3.504826423320819*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", GridBox[{
      {"4", "2", "3", "1"},
      {"0", "5", "0", "1"},
      {"2", "3", "6", "5"},
      {"1", "2", "3", "5"}
     }], ")"}]}], ";"}]], "Input",
 CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
 CellSize->{110, Inherited},
 TextJustification->1],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"E1", " ", "=", " ", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], "0", "1", "0"},
     {
      RowBox[{
       RowBox[{"-", "1"}], "/", "4"}], "0", "0", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.6266882674648*^9, 3.626688337851595*^9}, {
   3.626688373097391*^9, 3.626688457558138*^9}, 3.626688498056438*^9, {
   3.6266885377815933`*^9, 3.626688537885586*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.626688452301568*^9, 3.626688458768622*^9}, {
   3.626688499526938*^9, 3.626688540200308*^9}, 3.6266917029878187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A1", " ", "=", " ", 
   RowBox[{"E1", ".", "A"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "2", "3", "1"},
     {"0", "5", "0", "1"},
     {"0", "2", 
      FractionBox["9", "2"], 
      FractionBox["9", "2"]},
     {"0", 
      FractionBox["3", "2"], 
      FractionBox["9", "4"], 
      FractionBox["19", "4"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.62668846371076*^9, 3.626688503292458*^9, 
  3.626688543595882*^9, 3.6266917030511723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"E2", " ", "=", " ", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "2"}], "/", "5"}], "1", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "3"}], "/", "10"}], "0", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.626688570261759*^9, 3.626688665860424*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["2", "5"]}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["3", "10"]}], ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.62668868945091*^9, 3.6266917030939627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A2", " ", "=", " ", 
   RowBox[{"E2", ".", "A1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6266886707394323`*^9, 3.626688681573503*^9}, {
  3.6266888523461437`*^9, 3.626688865174716*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "2", "3", "1"},
     {"0", "5", "0", "1"},
     {"0", "0", 
      FractionBox["9", "2"], 
      FractionBox["41", "10"]},
     {"0", "0", 
      FractionBox["9", "4"], 
      FractionBox["89", "20"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626688700518909*^9, 3.626688904210022*^9, 
  3.62669170314404*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"E3", " ", "=", " ", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.6266887647919827`*^9, 3.626688818484961*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.626688823024837*^9, 3.626688917463498*^9, 
  3.6266917031943893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A3", " ", "=", " ", 
   RowBox[{"E3", ".", "A2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6266888267207613`*^9, 3.626688836348649*^9}, {
  3.626688931641494*^9, 3.626688938481433*^9}, {3.6266890261681557`*^9, 
  3.626689026290534*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "2", "3", "1"},
     {"0", "5", "0", "1"},
     {"0", "0", 
      FractionBox["9", "2"], 
      FractionBox["41", "10"]},
     {"0", "0", "0", 
      FractionBox["12", "5"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266890275160933`*^9, 3.626691703244494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Umat", " ", "=", " ", "A3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Lmat", " ", "=", " ", 
   RowBox[{"Inverse", "[", 
    RowBox[{"E3", ".", "E2", ".", "E1"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6266889528633347`*^9, 3.626688969312633*^9}, {
  3.626689036864223*^9, 3.6266890502183933`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {
      FractionBox["1", "2"], 
      FractionBox["2", "5"], "1", "0"},
     {
      FractionBox["1", "4"], 
      FractionBox["3", "10"], 
      FractionBox["1", "2"], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689061347117*^9, 3.626691703294611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Lmat", ".", "Umat"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.626689071049712*^9, 3.626689081403544*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "2", "3", "1"},
     {"0", "5", "0", "1"},
     {"2", "3", "6", "5"},
     {"1", "2", "3", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689116894555*^9, 3.626691703343799*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "2", "3", "1"},
     {"0", "5", "0", "1"},
     {"2", "3", "6", "5"},
     {"1", "2", "3", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689116894555*^9, 3.6266917033540087`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 3", "Subsubsection",
 CellChangeTimes->{
  3.5047485110869436`*^9, 3.5048262696120276`*^9, {3.5048263052190638`*^9, 
   3.504826306161118*^9}},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Use the factorization found above to find a solution to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"4", "2", "3", "1"},
      {"0", "5", "0", "1"},
      {"2", "3", "6", "5"},
      {"1", "2", "3", "5"}
     }], ")"}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["x", "1"]},
       {
        SubscriptBox["x", "2"]},
       {
        SubscriptBox["x", "3"]},
       {
        SubscriptBox["x", "4"]}
      }], ")"}], "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "31"}]},
       {"8"},
       {
        RowBox[{"-", "4"}]},
       {"2"}
      }], ")"}]}], TraditionalForm]]],
 ".  Verify your answer by computing the product of A and the solution."
}], "Text",
 CellChangeTimes->{{3.504475581208192*^9, 3.5044756064490356`*^9}, 
   3.5044759282096753`*^9, {3.5044760318534565`*^9, 3.5044761436276517`*^9}, {
   3.5044768349397984`*^9, 3.5044768482154217`*^9}, 3.504748470753637*^9, 
   3.504748565638064*^9, {3.5048262472027454`*^9, 3.5048262585163927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"L", " ", "=", " ", "Lmat"}], "\[IndentingNewLine]", 
 RowBox[{"U", " ", "=", " ", "Umat"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "L", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "U", "]"}]}], "Input",
 CellChangeTimes->{{3.626689155386441*^9, 3.626689167839942*^9}, {
  3.626689217525795*^9, 3.626689227603154*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["2", "5"], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.626689169729493*^9, 3.626691703390964*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["9", "2"], ",", 
     FractionBox["41", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["12", "5"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.626689169729493*^9, 3.6266917033980083`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {
      FractionBox["1", "2"], 
      FractionBox["2", "5"], "1", "0"},
     {
      FractionBox["1", "4"], 
      FractionBox["3", "10"], 
      FractionBox["1", "2"], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689169729493*^9, 3.626691703403543*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "2", "3", "1"},
     {"0", "5", "0", "1"},
     {"0", "0", 
      FractionBox["9", "2"], 
      FractionBox["41", "10"]},
     {"0", "0", "0", 
      FractionBox["12", "5"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689169729493*^9, 3.626691703413192*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "31"}], ",", " ", "8", ",", " ", 
     RowBox[{"-", "4"}], ",", " ", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lb", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "L", "]"}], ",", "b"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"soly", "=", 
   RowBox[{"RowReduce", "[", "Lb", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6266892945949497`*^9, 3.6266893026656*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", 
      RowBox[{"-", "31"}]},
     {"0", "1", "0", "0", "8"},
     {"0", "0", "1", "0", 
      FractionBox["83", "10"]},
     {"0", "0", "0", "1", 
      FractionBox["16", "5"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689305450163*^9, 3.626691703463523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yvec", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "soly", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uy", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "U", "]"}], ",", "yvec"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"solx", "=", 
   RowBox[{"RowReduce", "[", "Uy", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.6266893643330107`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "31"}], ",", "8", ",", 
   FractionBox["83", "10"], ",", 
   FractionBox["16", "5"]}], "}"}]], "Output",
 CellChangeTimes->{3.626689333049831*^9, 3.626689366712462*^9, 
  3.626691703510795*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["83", "9"]}]},
     {"0", "1", "0", "0", 
      FractionBox["4", "3"]},
     {"0", "0", "1", "0", 
      FractionBox["17", "27"]},
     {"0", "0", "0", "1", 
      FractionBox["4", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689333049831*^9, 3.626689366712462*^9, 
  3.6266917035189877`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xvec", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "solx", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["83", "9"]}], ",", 
   FractionBox["4", "3"], ",", 
   FractionBox["17", "27"], ",", 
   FractionBox["4", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.626689463001535*^9, 3.626691703561083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", ".", "xvec"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "31"}], ",", "8", ",", 
   RowBox[{"-", "4"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.626689509047192*^9, 3.626691703611827*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The LUDecomposition Command", "Subsection",
 CellChangeTimes->{
  3.504748710223213*^9, {3.504750785310901*^9, 3.504750789294129*^9}, 
   3.5048754233926334`*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "A ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function for determining the LU factorization of a matrix is ",
 StyleBox["LUDecomposition.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData["LUDecomposition"], "InlineFormula",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " generates a representation of the LU decomposition of a square matrix and \
returns a list of three elements. The first element is a combination of upper\
\[Hyphen] and lower\[Hyphen]triangular matrices, the second element is a \
vector specifying rows used for pivoting, and the third element is related to \
the condition number of the matrix. . For example, to determine the LU \
factorization of ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"2", "3", "2"},
      {"4", "13", "9"},
      {
       RowBox[{"-", "6"}], "5", "4"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]],
  CellChangeTimes->{
   3.504750914279278*^9, 3.504750949235277*^9, 3.5047510776786237`*^9, 
    3.50475150946432*^9, 3.504751608778001*^9, 3.504751702670371*^9, 
    3.5047517821009145`*^9, 3.504751893832305*^9, 3.5047520202635365`*^9, 
    3.504812923155654*^9, {3.504813077013454*^9, 3.504813084914906*^9}}],
 ", execute the following command."
}], "Text",
 CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
 CellSize->{940, Inherited},
 CellChangeTimes->{{3.5047507723741612`*^9, 3.5047507752483253`*^9}, {
   3.504750809923309*^9, 3.504750849015545*^9}, 3.504751844721496*^9, 
   3.504813095002483*^9},
 TextAlignment->Left,
 FontFamily->"Arial"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"2", "3", "0", "1"},
       {"4", "5", "2", "2"},
       {"6", "9", 
        RowBox[{"-", "3"}], "4"},
       {"0", "2", 
        RowBox[{"-", "1"}], "5"}
      }], ")"}]}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lu", ",", "p", ",", "c"}], "}"}], "=", 
   RowBox[{"LUDecomposition", "[", "A", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.504820084050234*^9, 3.5048201090316625`*^9}, 
   3.504825167636998*^9, {3.504826591195421*^9, 3.504826592770511*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"4", "5", "2", "2"},
     {"6", "9", 
      RowBox[{"-", "3"}], "4"},
     {"0", "2", 
      RowBox[{"-", "1"}], "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689787859077*^9, 3.6266917036638727`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "0", ",", 
           RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689787859077*^9, 3.626691703673017*^9}]
}, Open  ]],

Cell["\<\
The second output tells us the rows used for pivoting in the order they were \
used. Recall that when we applied the algorithm in the previous section, we \
left the rows in the order they appeared.

It is the first output of the LUDecomposition command that we need to examine \
and we have named that output lu. In that matrix lu, the elements in the \
diagonal and upper triangular region will form the nonzero elements of U; the \
elements of the lower triangular region below the diagonal will form the \
elements below the diagonal in L. The diagonal elements of L will be 1\
\[CloseCurlyQuote]s. There are different ways within Mathematica to \
reconstruct the lower and upper triangular matrices from lu.First, let us \
look at lu in matrix form.\
\>", "Text",
 CellChangeTimes->{{3.5048268518623304`*^9, 3.5048268927296677`*^9}, {
  3.5048269277086687`*^9, 3.504827055887*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Matrixform", "[", "lu", "]"}]], "Input",
 CellChangeTimes->{{3.5048268646110597`*^9, 3.5048268694693375`*^9}}],

Cell[BoxData[
 RowBox[{"Matrixform", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "0", ",", 
      RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.626689861400729*^9, 3.626691703713297*^9}]
}, Open  ]],

Cell["\<\
The following input uses a SparseArray and IdentityMatrix commands to take \
the matrix lu and make the necessary changes we need, as described above, to \
get L and U. If you had a 3\[Times]3 matrix, the n = 4 in the following input \
must be changed to n=3. To verify that your matrices are as you think they \
are, you should look at them in matrix form.\
\>", "Text",
 CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
 CellSize->{929, Inherited},
 CellChangeTimes->{{3.5047512462992682`*^9, 3.5047512642682962`*^9}, {
  3.5048146906827507`*^9, 3.504814751112207*^9}, {3.5048148013830824`*^9, 
  3.504814891296225*^9}, {3.5048149454743237`*^9, 3.5048149621182756`*^9}, {
  3.5048160689815845`*^9, 3.50481606959662*^9}, {3.504826662231484*^9, 
  3.5048266810655613`*^9}, {3.5048268440708847`*^9, 3.504826847056055*^9}},
 TextAlignment->Left,
 FontFamily->"Arial"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"lu", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{"j", "\[GreaterEqual]", "i"}]}], "\[Rule]", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "U", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{
    RowBox[{"lu", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
         RowBox[{"j", "<", "i"}]}], "\[Rule]", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], "+", 
    RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "L", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"0", 
      RowBox[{"-", "1"}], "2", "0"},
     {"0", "0", 
      RowBox[{"-", "3"}], "1"},
     {"0", "0", "0", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689893399122*^9, 3.626691703762116*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"2", "1", "0", "0"},
     {"3", "0", "1", "0"},
     {"0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "1"}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626689893399122*^9, 3.626691703771778*^9}]
}, Open  ]],

Cell["\<\
Comparing these to what we arrived at by applying the algorithm, we will see \
that our results agree.\
\>", "Text",
 CellChangeTimes->{{3.5048267266761703`*^9, 3.504826760305094*^9}, {
  3.5048268039845915`*^9, 3.5048268148682146`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"L", ".", "U"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.5047514755123787`*^9, 3.504751479544609*^9}, {
   3.50475194043297*^9, 3.504751953151698*^9}, {3.5048141705560007`*^9, 
   3.5048141740992036`*^9}, {3.504814210772301*^9, 3.504814241034032*^9}, {
   3.504815025146881*^9, 3.5048150297911463`*^9}, 3.504816513551013*^9, {
   3.504826781974333*^9, 3.5048267925969405`*^9}, {3.6266899435975103`*^9, 
   3.626689945482057*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"4", "5", "2", "2"},
     {"6", "9", 
      RowBox[{"-", "3"}], "4"},
     {"0", "2", 
      RowBox[{"-", "1"}], "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6266899272161407`*^9, 3.6266899460585318`*^9}, 
   3.62669170381398*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0", "1"},
     {"4", "5", "2", "2"},
     {"6", "9", 
      RowBox[{"-", "3"}], "4"},
     {"0", "2", 
      RowBox[{"-", "1"}], "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6266899272161407`*^9, 3.6266899460585318`*^9}, 
   3.6266917038245373`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 4", "Subsubsection",
 CellChangeTimes->{
  3.5044762401450195`*^9, 3.504476495345865*^9, 3.5047487261451235`*^9, {
   3.50482717740095*^9, 3.504827190206682*^9}, 3.5051672857610464`*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Use ",
 StyleBox["LUDecomposition",
  FontWeight->"Bold"],
 "  to find ",
 StyleBox["L",
  FontSlant->"Italic"],
 " and ",
 StyleBox["U",
  FontSlant->"Italic"],
 " for matrix ",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "2"},
     {"4", "13", "9"},
     {
      RowBox[{"-", "6"}], "5", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]]],
 " .  Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", " ", ".", "U"}], TraditionalForm]]],
 " to verify that the product of ",
 StyleBox["L",
  FontSlant->"Italic"],
 " and ",
 StyleBox["U",
  FontSlant->"Italic"],
 " does indeed equal the original matrix or the original matrix with rows \
permuted.  Begin by executing the following assignment statement, then copy \
and paste the input cells used in this section. Replace the A used in the \
demonstration with this A. Be sure to change the value of n."
}], "Text",
 CellChangeTimes->{{3.504476502974278*^9, 3.504476523815914*^9}, {
   3.50447672761467*^9, 3.5044767742899513`*^9}, {3.504734736305071*^9, 
   3.5047347678448753`*^9}, 3.5047349727705965`*^9, 3.5047488668701725`*^9, {
   3.5048163550439463`*^9, 3.5048164373046513`*^9}, {3.5048164756218433`*^9, 
   3.504816499851229*^9}, {3.5048272095737906`*^9, 3.5048272095737906`*^9}, {
   3.5051668446428156`*^9, 3.5051668538993454`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "2"},
     {"4", "13", "9"},
     {
      RowBox[{"-", "6"}], "5", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{3.5048272642369165`*^9},
 TextJustification->1],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "13", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "5", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6266899743654537`*^9, 3.6266901266963787`*^9, 
  3.626691703880319*^9}]
}, Open  ]],

Cell["\<\
Does the fact that this matrix is singular keep you from finding L and U?\
\>", "Text",
 CellChangeTimes->{{3.5051668578245697`*^9, 3.5051668915945015`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lu", ",", "p", ",", "c"}], "}"}], "=", 
   RowBox[{"LUDecomposition", "[", "A", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.626690049951942*^9, 3.6266900584538107`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LUDecomposition", "::", "sing"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Matrix \[NoBreak]\\!\\({\\(\\({2, 3, 2}\\)\\), \\(\\({4, \
13, 9}\\)\\), \\(\\({\\(\\(-6\\)\\), 5, 4}\\)\\)}\\)\[NoBreak] is singular. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/sing\\\", \
ButtonNote -> \\\"LUDecomposition::sing\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.626690129198552*^9, 3.626691703970929*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "7", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "2", ",", "0"}], "}"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.626690008563113*^9, 3.626690066638262*^9, {3.6266901245909023`*^9, 
   3.6266901292033863`*^9}, 3.626691703983073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"lu", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{"j", "\[GreaterEqual]", "i"}]}], "\[Rule]", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "U", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{
    RowBox[{"lu", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
         RowBox[{"j", "<", "i"}]}], "\[Rule]", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], "+", 
    RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "L", "]"}]}], "Input",
 CellChangeTimes->{{3.626690071751998*^9, 3.626690071863014*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "2"},
     {"0", "7", "5"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626690132404489*^9, 3.626691704047956*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"2", "1", "0"},
     {
      RowBox[{"-", "3"}], "2", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626690132404489*^9, 3.6266917040564547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"L", ".", "U"}], "]"}]], "Input",
 CellChangeTimes->{{3.626690153518079*^9, 3.6266901585815353`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "2"},
     {"4", "13", "9"},
     {
      RowBox[{"-", "6"}], "5", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626690160787443*^9, 3.626691704110815*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 5", "Subsubsection",
 CellChangeTimes->{3.5044762401450195`*^9, 3.504476495345865*^9, 
  3.5047487261451235`*^9, 3.50482717740095*^9, 3.5051672896782703`*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Use ",
 StyleBox["LUDecomposition",
  FontWeight->"Bold"],
 "  to find ",
 StyleBox["L",
  FontSlant->"Italic"],
 " and ",
 StyleBox["U",
  FontSlant->"Italic"],
 " for matrix ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"4", "1", "3"},
     {"2", "4", "7"},
     {"1", "2", "3"}
    }], ")"}]]],
 " .  Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", " ", ".", "U"}], TraditionalForm]]],
 " to verify that the product of ",
 StyleBox["L",
  FontSlant->"Italic"],
 " and ",
 StyleBox["U",
  FontSlant->"Italic"],
 " does indeed equal the original matrix or the original matrix with rows \
permuted.  Begin by executing the following assignment statement, then copy \
and paste the input cells used in this section. Replace the A used in the \
demonstration with this A. ",
 "Be sure to change the value of n."
}], "Text",
 CellChangeTimes->{{3.504476502974278*^9, 3.504476523815914*^9}, {
   3.50447672761467*^9, 3.5044767742899513`*^9}, {3.504734736305071*^9, 
   3.5047347678448753`*^9}, 3.5047349727705965`*^9, 3.5047488668701725`*^9, {
   3.5048163550439463`*^9, 3.5048164373046513`*^9}, {3.5048164756218433`*^9, 
   3.504816499851229*^9}, {3.50516705521686*^9, 3.5051670561709146`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", GridBox[{
     {"4", "1", "3"},
     {"2", "4", "7"},
     {"1", "2", "3"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.626690190841126*^9, 3.626690192667686*^9}},
 TextJustification->1],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6266901932620792`*^9, 3.626690316399465*^9, 
  3.626691704139654*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lu", ",", "p", ",", "c"}], "}"}], "=", 
   RowBox[{"LUDecomposition", "[", "A", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", 
           RowBox[{"-", "7"}], ",", 
           RowBox[{"-", "9"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", "1"}], "}"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2"}], "}"}]},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.626690219748067*^9, 3.62669032148658*^9, {3.6266903955969887`*^9, 
   3.626690401877544*^9}, 3.62669170418368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"lu", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{"j", "\[GreaterEqual]", "i"}]}], "\[Rule]", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "U", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{
    RowBox[{"lu", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
         RowBox[{"j", "<", "i"}]}], "\[Rule]", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], "+", 
    RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "L", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"0", 
      RowBox[{"-", "7"}], 
      RowBox[{"-", "9"}]},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266902728894577`*^9, 3.626690326109374*^9, 
  3.626691704235278*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"4", "1", "0"},
     {"2", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266902728894577`*^9, 3.626690326109374*^9, 
  3.626691704244956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"L", ".", "U"}], "]"}]], "Input",
 CellChangeTimes->{{3.6266902823146267`*^9, 3.6266902859772778`*^9}, {
  3.6266903449517517`*^9, 3.62669035162398*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "1", "3"},
     {"2", "4", "7"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.626690287338874*^9, {3.626690332568604*^9, 3.626690347256833*^9}, 
   3.626690417372566*^9, 3.626691704284202*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Permutation Matrices", "Subsection",
 CellChangeTimes->{3.504748762113181*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "From the previous two exercises, it is clear that the LU factorization \
algorithm, as discussed so far, is insufficient for the case where row \
interchanges are necessary. Even in the case where row interchanges are \
unnecessary, serious roundoff errors can occur in the process of obtaining ",
 StyleBox["L",
  FontSlant->"Italic"],
 " and ",
 StyleBox["U",
  FontSlant->"Italic"],
 " if a pivot is relatively small when compared to the other numbers in the \
pivot column.  Therefore the algorithm needs to be modified to allow for row \
interchanges.  Before discussing this modification, a quick review of \
permutation matrices is in order. Suppose the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n"}], TraditionalForm]]],
 " matrix ",
 StyleBox["P",
  FontSlant->"Italic"],
 " is obtained from the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n", " "}], TraditionalForm]]],
 " identity matrix ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]]],
 " by a series of row interchanges.  Then for any ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n"}], TraditionalForm]]],
 " matrix ",
 StyleBox["A",
  FontSlant->"Italic"],
 ", suppose the same row switches that were applied to ",
 StyleBox["I",
  FontSlant->"Italic"],
 " to obtain ",
 StyleBox["P",
  FontSlant->"Italic"],
 " are applied to ",
 StyleBox["A",
  FontSlant->"Italic"],
 " to obtain ",
 StyleBox["B",
  FontSlant->"Italic"],
 ".  Then it turns out that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["B",
     FontSlant->"Italic"], 
    StyleBox["=",
     FontSlant->"Plain"], 
    RowBox[{
     StyleBox["PA",
      FontSlant->"Italic"], "."}]}], TraditionalForm]]],
 "  Matrix ",
 StyleBox["P ",
  FontSlant->"Italic"],
 "is an example of a ",
 StyleBox["permutation matrix.",
  FontSlant->"Italic"],
 "\n\nAs a demonstration, observe the contents of the matrix ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]]],
 " in the following cell. Then note that row 1 of the identity matrix is in \
row 3 of ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]]],
 ", row 2 of I is in row 1 of ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]]],
 " and row 3 of ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]]],
 " is in row 2 of ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]]],
 ".  Execute the following command and study the contents of the product ",
 Cell[BoxData[
  FormBox[
   StyleBox["PA",
    FontSlant->"Italic"], TraditionalForm]]],
 " to see that the same row switches performed on ",
 StyleBox["I",
  FontSlant->"Italic"],
 " to obtain ",
 StyleBox["P",
  FontSlant->"Italic"],
 " are performed on ",
 StyleBox["A",
  FontSlant->"Italic"],
 " to obtain the product ",
 StyleBox["PA",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{3.5047492454578266`*^9, 3.504816227279639*^9},
 TextAlignment->Left,
 FontFamily->"Arial"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "i"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"a", "b", "c"},
       {"d", "e", "f"},
       {"g", "h", "i"}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1", "0"},
      {"0", "0", "1"},
      {"1", "0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"P", ".", "A"}], "]"}]}], "Input",
 CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
 CellSize->{217, Inherited},
 CellChangeTimes->{{3.504816233840014*^9, 3.5048162652928133`*^9}, 
   3.504816325263243*^9},
 TextAlignment->Left,
 TextJustification->1],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"d", "e", "f"},
     {"g", "h", "i"},
     {"a", "b", "c"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626690624223233*^9, 3.6266917043334713`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 6", "Subsubsection",
 CellChangeTimes->{
  3.5044762401450195`*^9, 3.504476495345865*^9, {3.5044778362806387`*^9, 
   3.5044778653716335`*^9}, {3.504749288600294*^9, 3.504749288918312*^9}, 
   3.5048273092914934`*^9, 3.5051673225131483`*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Determine a permutation matrix ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]]],
 " such that  ",
 Cell[BoxData[
  FormBox[
   StyleBox["PA",
    FontSlant->"Italic"], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"g", "h", "i"},
      {"a", "b", "c"},
      {"d", "e", "f"}
     }], ")"}], TraditionalForm]]],
 ".  Verify your work with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.504477253472928*^9, 3.5044772904137926`*^9}, 
   3.504478031533078*^9, {3.504734940677761*^9, 3.5047349462320786`*^9}, 
   3.5047493076423836`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "i"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"a", "b", "c"},
       {"d", "e", "f"},
       {"g", "h", "i"}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "1"},
      {"1", "0", "0"},
      {"0", "1", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"P", ".", "A"}], "]"}]}], "Input",
 CellChangeTimes->{{3.626690685419479*^9, 3.6266907966749077`*^9}, {
  3.626691243790045*^9, 3.626691265004177*^9}, {3.6266914376785707`*^9, 
  3.626691465361073*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"g", "h", "i"},
     {"a", "b", "c"},
     {"d", "e", "f"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6266907570014753`*^9, 3.6266907982558002`*^9}, {
   3.6266912486024017`*^9, 3.626691269615571*^9}, {3.6266914552901773`*^9, 
   3.6266914672397957`*^9}, 3.626691704383162*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 7", "Subsubsection",
 CellChangeTimes->{
  3.5044762401450195`*^9, 3.504476495345865*^9, 3.5044778362806387`*^9, {
   3.504749395407403*^9, 3.504749395573413*^9}, 3.5048273852018356`*^9, 
   3.505167326630384*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Find matrices P, L and U such that PA=LU where L and U provide the LU \
factorization of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"4", "4", "0", 
        RowBox[{"-", "4"}]},
       {"2", "0", "0", "0"},
       {
        RowBox[{"-", "4"}], "1", "0", "4"},
       {"4", "4", "2", "0"}
      }], ")"}]}], TraditionalForm]]],
 ".  Verify that PA=LU.  Begin by executing the following command."
}], "Text",
 CellChangeTimes->{{3.5044787581280403`*^9, 3.5044787878078613`*^9}, 
   3.5047495429418416`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", GridBox[{
     {"4", "4", "0", 
      RowBox[{"-", "4"}]},
     {"2", "0", "0", "0"},
     {
      RowBox[{"-", "4"}], "1", "0", "4"},
     {"4", "4", "2", "0"}
    }], ")"}]}]], "Input",
 TextJustification->1],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "0", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "1", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "2", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6266908108546257`*^9, 3.626691122397767*^9, 
  3.626691508452609*^9, 3.626691619321458*^9, 3.626691704434931*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lu", ",", " ", "p", ",", " ", "c"}], "}"}], " ", "=", " ", 
   RowBox[{"LUDecomposition", "[", "A", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.626690812949547*^9, 3.626690853211259*^9}, {
  3.6266910136233788`*^9, 3.62669103917937*^9}, {3.626691113263817*^9, 
  3.626691115553994*^9}, {3.626691547141345*^9, 3.6266915553325653`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "1", ",", "0", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "2", ",", 
           RowBox[{"-", "16"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "0", ",", 
           RowBox[{"-", "20"}]}], "}"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6266911171556168`*^9, 3.626691125962821*^9}, {
   3.626691502669923*^9, 3.6266915139200277`*^9}, {3.62669155183643*^9, 
   3.6266915574696913`*^9}, 3.626691621958467*^9, 3.6266917044836597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"lu", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{"j", "\[GreaterEqual]", "i"}]}], "\[Rule]", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "U", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{
    RowBox[{"lu", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
         RowBox[{"j", "<", "i"}]}], "\[Rule]", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], "+", 
    RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "L", "]"}]}], "Input",
 CellChangeTimes->{{3.626690920946732*^9, 3.6266909314683237`*^9}, {
  3.626690967113689*^9, 3.626690967191928*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0", "0"},
     {"0", "1", "0", "4"},
     {"0", "0", "2", 
      RowBox[{"-", "16"}]},
     {"0", "0", "0", 
      RowBox[{"-", "20"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.626691196004534*^9, 3.626691559733651*^9, {3.626691606190761*^9, 
   3.626691625386098*^9}, 3.6266917045336123`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {
      RowBox[{"-", "2"}], "1", "0", "0"},
     {"2", "4", "1", "0"},
     {"2", "4", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.626691196004534*^9, 3.626691559733651*^9, {3.626691606190761*^9, 
   3.626691625386098*^9}, 3.626691704542241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", " ", "=", " ", 
  RowBox[{"(", GridBox[{
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"},
     {"1", "0", "0", "0"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.626690934649694*^9, 3.6266909420230627`*^9}, {
  3.62669116902798*^9, 3.626691191824568*^9}, {3.626691721670773*^9, 
  3.626691722213262*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.626691202099066*^9, 3.626691361131673*^9, 3.626691564221191*^9, 
   3.626691627409153*^9, {3.626691704583906*^9, 3.626691724327836*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"P", ".", "A"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"L", ".", "U"}], "]"}]}], "Input",
 CellChangeTimes->{{3.62669094685942*^9, 3.626690960343623*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0", "0"},
     {
      RowBox[{"-", "4"}], "1", "0", "4"},
     {"4", "4", "2", "0"},
     {"4", "4", "0", 
      RowBox[{"-", "4"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.626691204357109*^9, 3.626691365242578*^9, 3.626691582471492*^9, {
   3.626691615437025*^9, 3.62669163054776*^9}, {3.626691704638948*^9, 
   3.626691726516829*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0", "0"},
     {
      RowBox[{"-", "4"}], "1", "0", "4"},
     {"4", "4", "2", "0"},
     {"4", "4", "0", 
      RowBox[{"-", "4"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.626691204357109*^9, 3.626691365242578*^9, 3.626691582471492*^9, {
   3.626691615437025*^9, 3.62669163054776*^9}, {3.626691704638948*^9, 
   3.6266917265266247`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 8", "Subsubsection",
 CellChangeTimes->{
  3.5044762401450195`*^9, 3.504476495345865*^9, 3.5044778362806387`*^9, {
   3.5047493994536347`*^9, 3.504749399755652*^9}, 3.5048273908761597`*^9, 
   3.5051673304456024`*^9},
 TextJustification->1,
 FontSize->14],

Cell[TextData[{
 "Use the LU factorization found in Exercise 7 to solve the matrix equation\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"4", "4", "0", 
       RowBox[{"-", "4"}]},
      {"2", "0", "0", "0"},
      {
       RowBox[{"-", "4"}], "1", "0", "4"},
      {"4", "4", "2", "0"}
     }], ")"}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["x", "1"]},
       {
        SubscriptBox["x", "2"]},
       {
        SubscriptBox["x", "3"]},
       {
        SubscriptBox["x", "4"]}
      }], ")"}], "=", 
    RowBox[{"(", GridBox[{
       {"4"},
       {"10"},
       {
        RowBox[{"-", "19"}]},
       {"12"}
      }], ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.5044787581280403`*^9, 3.5044787878078613`*^9}, 
   3.5047496011391706`*^9, 3.5048273961604624`*^9, {3.624832617942487*^9, 
   3.624832619654686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"4", ",", " ", "10", ",", " ", 
     RowBox[{"-", "19"}], ",", " ", "12"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pb", " ", "=", " ", 
  RowBox[{"P", ".", "b"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lb", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "L", "]"}], ",", " ", "pb"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"soly", " ", "=", " ", 
   RowBox[{"RowReduce", "[", "Lb", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.626691047893693*^9, 3.62669110053014*^9}, {
  3.626691145746401*^9, 3.626691150634438*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"-", "19"}], ",", "12", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.626691231093007*^9, 3.626691704688319*^9, 
  3.626691746736368*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "10"},
     {"0", "1", "0", "0", "1"},
     {"0", "0", "1", "0", 
      RowBox[{"-", "12"}]},
     {"0", "0", "0", "1", 
      RowBox[{"-", "20"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.626691231093007*^9, 3.626691704688319*^9, 
  3.626691746744903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yvec", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "soly", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uy", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "U", "]"}], ",", "yvec"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"solx", "=", 
   RowBox[{"RowReduce", "[", "Uy", "]"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "1", ",", 
   RowBox[{"-", "12"}], ",", 
   RowBox[{"-", "20"}]}], "}"}]], "Output",
 CellChangeTimes->{3.626691775560948*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "5"},
     {"0", "1", "0", "0", 
      RowBox[{"-", "3"}]},
     {"0", "0", "1", "0", "2"},
     {"0", "0", "0", "1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6266917755702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xvec", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "solx", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"-", "3"}], ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.626691299348312*^9, 3.6266917047838593`*^9, 
  3.626691784654516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", ".", "xvec"}]], "Input",
 CellChangeTimes->{{3.626691788939892*^9, 3.626691790432589*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "10", ",", 
   RowBox[{"-", "19"}], ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.626691790818639*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{854, 827},
WindowMargins->{{34, Automatic}, {Automatic, 12}},
PrintingOptions->{"PrintCellBrackets"->True,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{54, 54}, {72, 72}}},
ShowSelection->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 527, 8, 104, "Title"],
Cell[CellGroupData[{
Cell[1131, 34, 60425, 1001, 98, "Section"],
Cell[61559, 1037, 4546, 123, 767, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66142, 1165, 264, 7, 57, "Section"],
Cell[66409, 1174, 2696, 56, 300, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69142, 1235, 289, 4, 59, "Section"],
Cell[CellGroupData[{
Cell[69456, 1243, 72, 2, 35, "Subsection"],
Cell[69531, 1247, 722, 16, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70290, 1268, 303, 7, 36, "Subsection"],
Cell[70596, 1277, 1077, 19, 144, "Text"],
Cell[CellGroupData[{
Cell[71698, 1300, 1935, 62, 124, "Input"],
Cell[73636, 1364, 719, 21, 84, "Output"]
}, Open  ]],
Cell[74370, 1388, 549, 12, 68, "Text"],
Cell[CellGroupData[{
Cell[74944, 1404, 571, 17, 73, "Input"],
Cell[75518, 1423, 164, 5, 38, "Output"],
Cell[75685, 1430, 696, 20, 84, "Output"]
}, Open  ]],
Cell[76396, 1453, 665, 14, 87, "Text"],
Cell[CellGroupData[{
Cell[77086, 1471, 331, 9, 38, "Input"],
Cell[77420, 1482, 143, 4, 38, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77612, 1492, 120, 1, 35, "Subsection"],
Cell[77735, 1495, 1391, 31, 162, "Text"],
Cell[CellGroupData[{
Cell[79151, 1530, 836, 26, 192, "Input"],
Cell[79990, 1558, 788, 23, 102, "Output"]
}, Open  ]],
Cell[80793, 1584, 351, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[81169, 1594, 535, 14, 113, "Input"],
Cell[81707, 1610, 771, 22, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82515, 1637, 533, 14, 113, "Input"],
Cell[83051, 1653, 767, 22, 102, "Output"]
}, Open  ]],
Cell[83833, 1678, 377, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[84235, 1689, 399, 9, 56, "Input"],
Cell[84637, 1700, 767, 22, 102, "Output"]
}, Open  ]],
Cell[85419, 1725, 195, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[85639, 1733, 388, 7, 56, "Input"],
Cell[86030, 1742, 769, 22, 102, "Output"],
Cell[86802, 1766, 769, 22, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87608, 1793, 198, 5, 27, "Subsubsection"],
Cell[87809, 1800, 1182, 38, 110, "Text"],
Cell[CellGroupData[{
Cell[89016, 1842, 369, 6, 90, "Input"],
Cell[89388, 1850, 502, 14, 38, "Output"],
Cell[89893, 1866, 502, 14, 38, "Output"],
Cell[90398, 1882, 796, 23, 102, "Output"],
Cell[91197, 1907, 794, 23, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92028, 1935, 633, 17, 73, "Input"],
Cell[92664, 1954, 788, 22, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93489, 1981, 595, 17, 73, "Input"],
Cell[94087, 2000, 227, 5, 38, "Output"],
Cell[94317, 2007, 915, 26, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95269, 2038, 240, 6, 38, "Input"],
Cell[95512, 2046, 291, 9, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95840, 2060, 118, 2, 38, "Input"],
Cell[95961, 2064, 157, 3, 38, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96167, 2073, 117, 3, 27, "Subsubsection"],
Cell[96287, 2078, 611, 18, 47, "Text"],
Cell[96901, 2098, 324, 11, 91, "Input"],
Cell[CellGroupData[{
Cell[97250, 2113, 491, 14, 91, "Input"],
Cell[97744, 2129, 604, 17, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98385, 2151, 122, 3, 38, "Input"],
Cell[98510, 2156, 897, 26, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99444, 2187, 370, 12, 91, "Input"],
Cell[99817, 2201, 530, 16, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100384, 2222, 242, 5, 38, "Input"],
Cell[100629, 2229, 851, 25, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101517, 2259, 321, 10, 91, "Input"],
Cell[101841, 2271, 506, 14, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102384, 2290, 291, 6, 38, "Input"],
Cell[102678, 2298, 803, 23, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103518, 2326, 375, 8, 56, "Input"],
Cell[103896, 2336, 849, 25, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104782, 2366, 224, 4, 56, "Input"],
Cell[105009, 2372, 723, 20, 102, "Output"],
Cell[105735, 2394, 725, 20, 102, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106509, 2420, 196, 5, 27, "Subsubsection"],
Cell[106708, 2427, 1083, 36, 110, "Text"],
Cell[CellGroupData[{
Cell[107816, 2467, 370, 6, 90, "Input"],
Cell[108189, 2475, 554, 16, 58, "Output"],
Cell[108746, 2493, 510, 14, 58, "Output"],
Cell[109259, 2509, 849, 25, 118, "Output"],
Cell[110111, 2536, 801, 23, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110949, 2564, 603, 18, 73, "Input"],
Cell[111555, 2584, 819, 23, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112411, 2612, 573, 17, 73, "Input"],
Cell[112987, 2631, 249, 7, 58, "Output"],
Cell[113239, 2640, 896, 26, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114172, 2671, 174, 5, 38, "Input"],
Cell[114349, 2678, 268, 8, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114654, 2691, 52, 1, 38, "Input"],
Cell[114709, 2694, 196, 5, 38, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114966, 2706, 206, 5, 35, "Subsection"],
Cell[115175, 2713, 2012, 50, 143, "Text"],
Cell[CellGroupData[{
Cell[117212, 2767, 640, 18, 113, "Input"],
Cell[117855, 2787, 769, 22, 102, "Output"],
Cell[118627, 2811, 1290, 37, 84, "Output"]
}, Open  ]],
Cell[119932, 2851, 896, 15, 155, "Text"],
Cell[CellGroupData[{
Cell[120853, 2870, 134, 2, 38, "Input"],
Cell[120990, 2874, 567, 16, 38, "Output"]
}, Open  ]],
Cell[121572, 2893, 881, 15, 68, "Text"],
Cell[CellGroupData[{
Cell[122478, 2912, 986, 30, 107, "Input"],
Cell[123467, 2944, 767, 22, 102, "Output"],
Cell[124237, 2968, 767, 22, 102, "Output"]
}, Open  ]],
Cell[125019, 2993, 247, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[125291, 3002, 566, 10, 56, "Input"],
Cell[125860, 3014, 798, 23, 102, "Output"],
Cell[126661, 3039, 801, 23, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127499, 3067, 239, 5, 27, "Subsubsection"],
Cell[127741, 3074, 1718, 48, 119, "Text"],
Cell[CellGroupData[{
Cell[129484, 3126, 666, 19, 73, "Input"],
Cell[130153, 3147, 375, 11, 38, "Output"]
}, Open  ]],
Cell[130543, 3161, 167, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[130735, 3168, 257, 6, 38, "Input"],
Cell[130995, 3176, 552, 10, 24, "Message"],
Cell[131550, 3188, 1157, 34, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132744, 3227, 1052, 31, 107, "Input"],
Cell[133799, 3260, 681, 19, 84, "Output"],
Cell[134483, 3281, 705, 20, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135225, 3306, 154, 3, 38, "Input"],
Cell[135382, 3311, 704, 20, 84, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136135, 3337, 211, 4, 27, "Subsubsection"],
Cell[136349, 3343, 1217, 37, 119, "Text"],
Cell[CellGroupData[{
Cell[137591, 3384, 239, 8, 73, "Input"],
Cell[137833, 3394, 351, 10, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138221, 3409, 189, 5, 38, "Input"],
Cell[138413, 3416, 1180, 35, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139630, 3456, 986, 30, 107, "Input"],
Cell[140619, 3488, 752, 22, 84, "Output"],
Cell[141374, 3512, 708, 20, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142119, 3537, 206, 4, 38, "Input"],
Cell[142328, 3543, 756, 21, 84, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143145, 3571, 122, 3, 35, "Subsection"],
Cell[143270, 3576, 2884, 100, 264, "Text"],
Cell[CellGroupData[{
Cell[146179, 3680, 847, 28, 172, "Input"],
Cell[147029, 3710, 683, 19, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147749, 3734, 294, 6, 27, "Subsubsection"],
Cell[148046, 3742, 637, 24, 72, "Text"],
Cell[CellGroupData[{
Cell[148708, 3770, 791, 25, 172, "Input"],
Cell[149502, 3797, 815, 21, 84, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150366, 3824, 266, 6, 27, "Subsubsection"],
Cell[150635, 3832, 564, 17, 108, "Text"],
Cell[CellGroupData[{
Cell[151224, 3853, 259, 10, 91, "Input"],
Cell[151486, 3865, 546, 14, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152069, 3884, 422, 8, 38, "Input"],
Cell[152494, 3894, 1418, 38, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153949, 3937, 1103, 32, 107, "Input"],
Cell[155055, 3971, 846, 24, 102, "Output"],
Cell[155904, 3997, 820, 23, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156761, 4025, 367, 10, 91, "Input"],
Cell[157131, 4037, 530, 13, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157698, 4055, 240, 5, 56, "Input"],
Cell[157941, 4062, 891, 25, 102, "Output"],
Cell[158835, 4089, 893, 25, 102, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159777, 4120, 270, 6, 27, "Subsubsection"],
Cell[160050, 4128, 926, 35, 107, "Text"],
Cell[CellGroupData[{
Cell[161001, 4167, 752, 20, 90, "Input"],
Cell[161756, 4189, 204, 5, 38, "Output"],
Cell[161963, 4196, 815, 23, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162815, 4224, 529, 16, 73, "Input"],
Cell[163347, 4242, 176, 5, 38, "Output"],
Cell[163526, 4249, 741, 21, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164304, 4275, 174, 5, 38, "Input"],
Cell[164481, 4282, 203, 5, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164721, 4292, 118, 2, 38, "Input"],
Cell[164842, 4296, 157, 4, 72, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
